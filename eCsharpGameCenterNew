[1mdiff --git a/.gitattributes b/.gitattributes[m
[1mdeleted file mode 100644[m
[1mindex 1ff0c42..0000000[m
[1m--- a/.gitattributes[m
[1m+++ /dev/null[m
[36m@@ -1,63 +0,0 @@[m
[31m-###############################################################################[m
[31m-# Set default behavior to automatically normalize line endings.[m
[31m-###############################################################################[m
[31m-* text=auto[m
[31m-[m
[31m-###############################################################################[m
[31m-# Set default behavior for command prompt diff.[m
[31m-#[m
[31m-# This is need for earlier builds of msysgit that does not have it on by[m
[31m-# default for csharp files.[m
[31m-# Note: This is only used by command line[m
[31m-###############################################################################[m
[31m-#*.cs     diff=csharp[m
[31m-[m
[31m-###############################################################################[m
[31m-# Set the merge driver for project and solution files[m
[31m-#[m
[31m-# Merging from the command prompt will add diff markers to the files if there[m
[31m-# are conflicts (Merging from VS is not affected by the settings below, in VS[m
[31m-# the diff markers are never inserted). Diff markers may cause the following [m
[31m-# file extensions to fail to load in VS. An alternative would be to treat[m
[31m-# these files as binary and thus will always conflict and require user[m
[31m-# intervention with every merge. To do so, just uncomment the entries below[m
[31m-###############################################################################[m
[31m-#*.sln       merge=binary[m
[31m-#*.csproj    merge=binary[m
[31m-#*.vbproj    merge=binary[m
[31m-#*.vcxproj   merge=binary[m
[31m-#*.vcproj    merge=binary[m
[31m-#*.dbproj    merge=binary[m
[31m-#*.fsproj    merge=binary[m
[31m-#*.lsproj    merge=binary[m
[31m-#*.wixproj   merge=binary[m
[31m-#*.modelproj merge=binary[m
[31m-#*.sqlproj   merge=binary[m
[31m-#*.wwaproj   merge=binary[m
[31m-[m
[31m-###############################################################################[m
[31m-# behavior for image files[m
[31m-#[m
[31m-# image files are treated as binary by default.[m
[31m-###############################################################################[m
[31m-#*.jpg   binary[m
[31m-#*.png   binary[m
[31m-#*.gif   binary[m
[31m-[m
[31m-###############################################################################[m
[31m-# diff behavior for common document formats[m
[31m-# [m
[31m-# Convert binary document formats to text before diffing them. This feature[m
[31m-# is only available from the command line. Turn it on by uncommenting the [m
[31m-# entries below.[m
[31m-###############################################################################[m
[31m-#*.doc   diff=astextplain[m
[31m-#*.DOC   diff=astextplain[m
[31m-#*.docx  diff=astextplain[m
[31m-#*.DOCX  diff=astextplain[m
[31m-#*.dot   diff=astextplain[m
[31m-#*.DOT   diff=astextplain[m
[31m-#*.pdf   diff=astextplain[m
[31m-#*.PDF   diff=astextplain[m
[31m-#*.rtf   diff=astextplain[m
[31m-#*.RTF   diff=astextplain[m
[1mdiff --git a/.gitignore b/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex 9491a2f..0000000[m
[1m--- a/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,363 +0,0 @@[m
[31m-## Ignore Visual Studio temporary files, build results, and[m
[31m-## files generated by popular Visual Studio add-ons.[m
[31m-##[m
[31m-## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore[m
[31m-[m
[31m-# User-specific files[m
[31m-*.rsuser[m
[31m-*.suo[m
[31m-*.user[m
[31m-*.userosscache[m
[31m-*.sln.docstates[m
[31m-[m
[31m-# User-specific files (MonoDevelop/Xamarin Studio)[m
[31m-*.userprefs[m
[31m-[m
[31m-# Mono auto generated files[m
[31m-mono_crash.*[m
[31m-[m
[31m-# Build results[m
[31m-[Dd]ebug/[m
[31m-[Dd]ebugPublic/[m
[31m-[Rr]elease/[m
[31m-[Rr]eleases/[m
[31m-x64/[m
[31m-x86/[m
[31m-[Ww][Ii][Nn]32/[m
[31m-[Aa][Rr][Mm]/[m
[31m-[Aa][Rr][Mm]64/[m
[31m-bld/[m
[31m-[Bb]in/[m
[31m-[Oo]bj/[m
[31m-[Oo]ut/[m
[31m-[Ll]og/[m
[31m-[Ll]ogs/[m
[31m-[m
[31m-# Visual Studio 2015/2017 cache/options directory[m
[31m-.vs/[m
[31m-# Uncomment if you have tasks that create the project's static files in wwwroot[m
[31m-#wwwroot/[m
[31m-[m
[31m-# Visual Studio 2017 auto generated files[m
[31m-Generated\ Files/[m
[31m-[m
[31m-# MSTest test Results[m
[31m-[Tt]est[Rr]esult*/[m
[31m-[Bb]uild[Ll]og.*[m
[31m-[m
[31m-# NUnit[m
[31m-*.VisualState.xml[m
[31m-TestResult.xml[m
[31m-nunit-*.xml[m
[31m-[m
[31m-# Build Results of an ATL Project[m
[31m-[Dd]ebugPS/[m
[31m-[Rr]eleasePS/[m
[31m-dlldata.c[m
[31m-[m
[31m-# Benchmark Results[m
[31m-BenchmarkDotNet.Artifacts/[m
[31m-[m
[31m-# .NET Core[m
[31m-project.lock.json[m
[31m-project.fragment.lock.json[m
[31m-artifacts/[m
[31m-[m
[31m-# ASP.NET Scaffolding[m
[31m-ScaffoldingReadMe.txt[m
[31m-[m
[31m-# StyleCop[m
[31m-StyleCopReport.xml[m
[31m-[m
[31m-# Files built by Visual Studio[m
[31m-*_i.c[m
[31m-*_p.c[m
[31m-*_h.h[m
[31m-*.ilk[m
[31m-*.meta[m
[31m-*.obj[m
[31m-*.iobj[m
[31m-*.pch[m
[31m-*.pdb[m
[31m-*.ipdb[m
[31m-*.pgc[m
[31m-*.pgd[m
[31m-*.rsp[m
[31m-*.sbr[m
[31m-*.tlb[m
[31m-*.tli[m
[31m-*.tlh[m
[31m-*.tmp[m
[31m-*.tmp_proj[m
[31m-*_wpftmp.csproj[m
[31m-*.log[m
[31m-*.vspscc[m
[31m-*.vssscc[m
[31m-.builds[m
[31m-*.pidb[m
[31m-*.svclog[m
[31m-*.scc[m
[31m-[m
[31m-# Chutzpah Test files[m
[31m-_Chutzpah*[m
[31m-[m
[31m-# Visual C++ cache files[m
[31m-ipch/[m
[31m-*.aps[m
[31m-*.ncb[m
[31m-*.opendb[m
[31m-*.opensdf[m
[31m-*.sdf[m
[31m-*.cachefile[m
[31m-*.VC.db[m
[31m-*.VC.VC.opendb[m
[31m-[m
[31m-# Visual Studio profiler[m
[31m-*.psess[m
[31m-*.vsp[m
[31m-*.vspx[m
[31m-*.sap[m
[31m-[m
[31m-# Visual Studio Trace Files[m
[31m-*.e2e[m
[31m-[m
[31m-# TFS 2012 Local Workspace[m
[31m-$tf/[m
[31m-[m
[31m-# Guidance Automation Toolkit[m
[31m-*.gpState[m
[31m-[m
[31m-# ReSharper is a .NET coding add-in[m
[31m-_ReSharper*/[m
[31m-*.[Rr]e[Ss]harper[m
[31m-*.DotSettings.user[m
[31m-[m
[31m-# TeamCity is a build add-in[m
[31m-_TeamCity*[m
[31m-[m
[31m-# DotCover is a Code Coverage Tool[m
[31m-*.dotCover[m
[31m-[m
[31m-# AxoCover is a Code Coverage Tool[m
[31m-.axoCover/*[m
[31m-!.axoCover/settings.json[m
[31m-[m
[31m-# Coverlet is a free, cross platform Code Coverage Tool[m
[31m-coverage*.json[m
[31m-coverage*.xml[m
[31m-coverage*.info[m
[31m-[m
[31m-# Visual Studio code coverage results[m
[31m-*.coverage[m
[31m-*.coveragexml[m
[31m-[m
[31m-# NCrunch[m
[31m-_NCrunch_*[m
[31m-.*crunch*.local.xml[m
[31m-nCrunchTemp_*[m
[31m-[m
[31m-# MightyMoose[m
[31m-*.mm.*[m
[31m-AutoTest.Net/[m
[31m-[m
[31m-# Web workbench (sass)[m
[31m-.sass-cache/[m
[31m-[m
[31m-# Installshield output folder[m
[31m-[Ee]xpress/[m
[31m-[m
[31m-# DocProject is a documentation generator add-in[m
[31m-DocProject/buildhelp/[m
[31m-DocProject/Help/*.HxT[m
[31m-DocProject/Help/*.HxC[m
[31m-DocProject/Help/*.hhc[m
[31m-DocProject/Help/*.hhk[m
[31m-DocProject/Help/*.hhp[m
[31m-DocProject/Help/Html2[m
[31m-DocProject/Help/html[m
[31m-[m
[31m-# Click-Once directory[m
[31m-publish/[m
[31m-[m
[31m-# Publish Web Output[m
[31m-*.[Pp]ublish.xml[m
[31m-*.azurePubxml[m
[31m-# Note: Comment the next line if you want to checkin your web deploy settings,[m
[31m-# but database connection strings (with potential passwords) will be unencrypted[m
[31m-*.pubxml[m
[31m-*.publishproj[m
[31m-[m
[31m-# Microsoft Azure Web App publish settings. Comment the next line if you want to[m
[31m-# checkin your Azure Web App publish settings, but sensitive information contained[m
[31m-# in these scripts will be unencrypted[m
[31m-PublishScripts/[m
[31m-[m
[31m-# NuGet Packages[m
[31m-*.nupkg[m
[31m-# NuGet Symbol Packages[m
[31m-*.snupkg[m
[31m-# The packages folder can be ignored because of Package Restore[m
[31m-**/[Pp]ackages/*[m
[31m-# except build/, which is used as an MSBuild target.[m
[31m-!**/[Pp]ackages/build/[m
[31m-# Uncomment if necessary however generally it will be regenerated when needed[m
[31m-#!**/[Pp]ackages/repositories.config[m
[31m-# NuGet v3's project.json files produces more ignorable files[m
[31m-*.nuget.props[m
[31m-*.nuget.targets[m
[31m-[m
[31m-# Microsoft Azure Build Output[m
[31m-csx/[m
[31m-*.build.csdef[m
[31m-[m
[31m-# Microsoft Azure Emulator[m
[31m-ecf/[m
[31m-rcf/[m
[31m-[m
[31m-# Windows Store app package directories and files[m
[31m-AppPackages/[m
[31m-BundleArtifacts/[m
[31m-Package.StoreAssociation.xml[m
[31m-_pkginfo.txt[m
[31m-*.appx[m
[31m-*.appxbundle[m
[31m-*.appxupload[m
[31m-[m
[31m-# Visual Studio cache files[m
[31m-# files ending in .cache can be ignored[m
[31m-*.[Cc]ache[m
[31m-# but keep track of directories ending in .cache[m
[31m-!?*.[Cc]ache/[m
[31m-[m
[31m-# Others[m
[31m-ClientBin/[m
[31m-~$*[m
[31m-*~[m
[31m-*.dbmdl[m
[31m-*.dbproj.schemaview[m
[31m-*.jfm[m
[31m-*.pfx[m
[31m-*.publishsettings[m
[31m-orleans.codegen.cs[m
[31m-[m
[31m-# Including strong name files can present a security risk[m
[31m-# (https://github.com/github/gitignore/pull/2483#issue-259490424)[m
[31m-#*.snk[m
[31m-[m
[31m-# Since there are multiple workflows, uncomment next line to ignore bower_components[m
[31m-# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)[m
[31m-#bower_components/[m
[31m-[m
[31m-# RIA/Silverlight projects[m
[31m-Generated_Code/[m
[31m-[m
[31m-# Backup & report files from converting an old project file[m
[31m-# to a newer Visual Studio version. Backup files are not needed,[m
[31m-# because we have git ;-)[m
[31m-_UpgradeReport_Files/[m
[31m-Backup*/[m
[31m-UpgradeLog*.XML[m
[31m-UpgradeLog*.htm[m
[31m-ServiceFabricBackup/[m
[31m-*.rptproj.bak[m
[31m-[m
[31m-# SQL Server files[m
[31m-*.mdf[m
[31m-*.ldf[m
[31m-*.ndf[m
[31m-[m
[31m-# Business Intelligence projects[m
[31m-*.rdl.data[m
[31m-*.bim.layout[m
[31m-*.bim_*.settings[m
[31m-*.rptproj.rsuser[m
[31m-*- [Bb]ackup.rdl[m
[31m-*- [Bb]ackup ([0-9]).rdl[m
[31m-*- [Bb]ackup ([0-9][0-9]).rdl[m
[31m-[m
[31m-# Microsoft Fakes[m
[31m-FakesAssemblies/[m
[31m-[m
[31m-# GhostDoc plugin setting file[m
[31m-*.GhostDoc.xml[m
[31m-[m
[31m-# Node.js Tools for Visual Studio[m
[31m-.ntvs_analysis.dat[m
[31m-node_modules/[m
[31m-[m
[31m-# Visual Studio 6 build log[m
[31m-*.plg[m
[31m-[m
[31m-# Visual Studio 6 workspace options file[m
[31m-*.opt[m
[31m-[m
[31m-# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)[m
[31m-*.vbw[m
[31m-[m
[31m-# Visual Studio LightSwitch build output[m
[31m-**/*.HTMLClient/GeneratedArtifacts[m
[31m-**/*.DesktopClient/GeneratedArtifacts[m
[31m-**/*.DesktopClient/ModelManifest.xml[m
[31m-**/*.Server/GeneratedArtifacts[m
[31m-**/*.Server/ModelManifest.xml[m
[31m-_Pvt_Extensions[m
[31m-[m
[31m-# Paket dependency manager[m
[31m-.paket/paket.exe[m
[31m-paket-files/[m
[31m-[m
[31m-# FAKE - F# Make[m
[31m-.fake/[m
[31m-[m
[31m-# CodeRush personal settings[m
[31m-.cr/personal[m
[31m-[m
[31m-# Python Tools for Visual Studio (PTVS)[m
[31m-__pycache__/[m
[31m-*.pyc[m
[31m-[m
[31m-# Cake - Uncomment if you are using it[m
[31m-# tools/**[m
[31m-# !tools/packages.config[m
[31m-[m
[31m-# Tabs Studio[m
[31m-*.tss[m
[31m-[m
[31m-# Telerik's JustMock configuration file[m
[31m-*.jmconfig[m
[31m-[m
[31m-# BizTalk build output[m
[31m-*.btp.cs[m
[31m-*.btm.cs[m
[31m-*.odx.cs[m
[31m-*.xsd.cs[m
[31m-[m
[31m-# OpenCover UI analysis results[m
[31m-OpenCover/[m
[31m-[m
[31m-# Azure Stream Analytics local run output[m
[31m-ASALocalRun/[m
[31m-[m
[31m-# MSBuild Binary and Structured Log[m
[31m-*.binlog[m
[31m-[m
[31m-# NVidia Nsight GPU debugger configuration file[m
[31m-*.nvuser[m
[31m-[m
[31m-# MFractors (Xamarin productivity tool) working folder[m
[31m-.mfractor/[m
[31m-[m
[31m-# Local History for Visual Studio[m
[31m-.localhistory/[m
[31m-[m
[31m-# BeatPulse healthcheck temp database[m
[31m-healthchecksdb[m
[31m-[m
[31m-# Backup folder for Package Reference Convert tool in Visual Studio 2017[m
[31m-MigrationBackup/[m
[31m-[m
[31m-# Ionide (cross platform F# VS Code tools) working folder[m
[31m-.ionide/[m
[31m-[m
[31m-# Fody - auto-generated XML schema[m
[31m-FodyWeavers.xsd[m
\ No newline at end of file[m
[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..b8239f7[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m# ProjectCenter[m
\ No newline at end of file[m
[1mdiff --git a/gameCenter.sln b/gameCenter.sln[m
[1mdeleted file mode 100644[m
[1mindex 8b2f838..0000000[m
[1m--- a/gameCenter.sln[m
[1m+++ /dev/null[m
[36m@@ -1,25 +0,0 @@[m
[31m-﻿[m
[31m-Microsoft Visual Studio Solution File, Format Version 12.00[m
[31m-# Visual Studio Version 17[m
[31m-VisualStudioVersion = 17.6.33723.286[m
[31m-MinimumVisualStudioVersion = 10.0.40219.1[m
[31m-Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "gameCenter", "gameCenter\gameCenter.csproj", "{C23437A7-4560-407E-BCF5-E7F663C7429E}"[m
[31m-EndProject[m
[31m-Global[m
[31m-	GlobalSection(SolutionConfigurationPlatforms) = preSolution[m
[31m-		Debug|Any CPU = Debug|Any CPU[m
[31m-		Release|Any CPU = Release|Any CPU[m
[31m-	EndGlobalSection[m
[31m-	GlobalSection(ProjectConfigurationPlatforms) = postSolution[m
[31m-		{C23437A7-4560-407E-BCF5-E7F663C7429E}.Debug|Any CPU.ActiveCfg = Release|Any CPU[m
[31m-		{C23437A7-4560-407E-BCF5-E7F663C7429E}.Debug|Any CPU.Build.0 = Release|Any CPU[m
[31m-		{C23437A7-4560-407E-BCF5-E7F663C7429E}.Release|Any CPU.ActiveCfg = Release|Any CPU[m
[31m-		{C23437A7-4560-407E-BCF5-E7F663C7429E}.Release|Any CPU.Build.0 = Release|Any CPU[m
[31m-	EndGlobalSection[m
[31m-	GlobalSection(SolutionProperties) = preSolution[m
[31m-		HideSolutionNode = FALSE[m
[31m-	EndGlobalSection[m
[31m-	GlobalSection(ExtensibilityGlobals) = postSolution[m
[31m-		SolutionGuid = {D40071BA-DA77-4D91-8DDC-CA10EC7FC3E3}[m
[31m-	EndGlobalSection[m
[31m-EndGlobal[m
[1mdiff --git a/gameCenter/App.xaml b/gameCenter/App.xaml[m
[1mdeleted file mode 100644[m
[1mindex 044ecad..0000000[m
[1m--- a/gameCenter/App.xaml[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-﻿<Application x:Class="gameCenter.App"[m
[31m-             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m
[31m-             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"[m
[31m-             xmlns:local="clr-namespace:gameCenter"[m
[31m-             StartupUri="MainWindow.xaml">[m
[31m-    <Application.Resources>[m
[31m-        <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m
[31m-                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">[m
[31m-            <FontFamily x:Key="DefaultFont"></FontFamily>[m
[31m-        </ResourceDictionary>[m
[31m-    </Application.Resources>[m
[31m-</Application>[m
[1mdiff --git a/gameCenter/App.xaml.cs b/gameCenter/App.xaml.cs[m
[1mdeleted file mode 100644[m
[1mindex 6204d47..0000000[m
[1m--- a/gameCenter/App.xaml.cs[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Configuration;[m
[31m-using System.Data;[m
[31m-using System.Linq;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows;[m
[31m-[m
[31m-namespace gameCenter[m
[31m-{[m
[31m-    /// <summary>[m
[31m-    /// Interaction logic for App.xaml[m
[31m-    /// </summary>[m
[31m-    public partial class App : Application[m
[31m-    {[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/AssemblyInfo.cs b/gameCenter/AssemblyInfo.cs[m
[1mdeleted file mode 100644[m
[1mindex 8b5504e..0000000[m
[1m--- a/gameCenter/AssemblyInfo.cs[m
[1m+++ /dev/null[m
[36m@@ -1,10 +0,0 @@[m
[31m-using System.Windows;[m
[31m-[m
[31m-[assembly: ThemeInfo([m
[31m-    ResourceDictionaryLocation.None, //where theme specific resource dictionaries are located[m
[31m-                                     //(used if a resource is not found in the page,[m
[31m-                                     // or application resource dictionaries)[m
[31m-    ResourceDictionaryLocation.SourceAssembly //where the generic resource dictionary is located[m
[31m-                                              //(used if a resource is not found in the page,[m
[31m-                                              // app, or any theme specific resource dictionaries)[m
[31m-)][m
[1mdiff --git a/gameCenter/Images/2048icon.png b/gameCenter/Images/2048icon.png[m
[1mdeleted file mode 100644[m
[1mindex 12c7ed1..0000000[m
Binary files a/gameCenter/Images/2048icon.png and /dev/null differ
[1mdiff --git a/gameCenter/Images/APIicon.png b/gameCenter/Images/APIicon.png[m
[1mdeleted file mode 100644[m
[1mindex 4c71e58..0000000[m
Binary files a/gameCenter/Images/APIicon.png and /dev/null differ
[1mdiff --git a/gameCenter/Images/CurrencyConverterIcon.png b/gameCenter/Images/CurrencyConverterIcon.png[m
[1mdeleted file mode 100644[m
[1mindex cfc6dc0..0000000[m
Binary files a/gameCenter/Images/CurrencyConverterIcon.png and /dev/null differ
[1mdiff --git a/gameCenter/Images/FileIOicon.png b/gameCenter/Images/FileIOicon.png[m
[1mdeleted file mode 100644[m
[1mindex 39e7793..0000000[m
Binary files a/gameCenter/Images/FileIOicon.png and /dev/null differ
[1mdiff --git a/gameCenter/Images/SimonSaysIcon.png b/gameCenter/Images/SimonSaysIcon.png[m
[1mdeleted file mode 100644[m
[1mindex 87d3958..0000000[m
Binary files a/gameCenter/Images/SimonSaysIcon.png and /dev/null differ
[1mdiff --git a/gameCenter/Images/TicTacToeIcon.png b/gameCenter/Images/TicTacToeIcon.png[m
[1mdeleted file mode 100644[m
[1mindex 0500e13..0000000[m
Binary files a/gameCenter/Images/TicTacToeIcon.png and /dev/null differ
[1mdiff --git a/gameCenter/Images/ToDoListIcon.png b/gameCenter/Images/ToDoListIcon.png[m
[1mdeleted file mode 100644[m
[1mindex bc287bd..0000000[m
Binary files a/gameCenter/Images/ToDoListIcon.png and /dev/null differ
[1mdiff --git a/gameCenter/Images/UserManagerIcon.png b/gameCenter/Images/UserManagerIcon.png[m
[1mdeleted file mode 100644[m
[1mindex 814236f..0000000[m
Binary files a/gameCenter/Images/UserManagerIcon.png and /dev/null differ
[1mdiff --git a/gameCenter/Images/WPFicon.png b/gameCenter/Images/WPFicon.png[m
[1mdeleted file mode 100644[m
[1mindex 59958e7..0000000[m
Binary files a/gameCenter/Images/WPFicon.png and /dev/null differ
[1mdiff --git a/gameCenter/Images/XAMLicon.png b/gameCenter/Images/XAMLicon.png[m
[1mdeleted file mode 100644[m
[1mindex 742f53e..0000000[m
Binary files a/gameCenter/Images/XAMLicon.png and /dev/null differ
[1mdiff --git a/gameCenter/Images/backGround.jpg b/gameCenter/Images/backGround.jpg[m
[1mdeleted file mode 100644[m
[1mindex 7a6c0d3..0000000[m
Binary files a/gameCenter/Images/backGround.jpg and /dev/null differ
[1mdiff --git a/gameCenter/Images/cSHARPicon.png b/gameCenter/Images/cSHARPicon.png[m
[1mdeleted file mode 100644[m
[1mindex efbd0dd..0000000[m
Binary files a/gameCenter/Images/cSHARPicon.png and /dev/null differ
[1mdiff --git a/gameCenter/MainWindow.xaml b/gameCenter/MainWindow.xaml[m
[1mdeleted file mode 100644[m
[1mindex ec22e3f..0000000[m
[1m--- a/gameCenter/MainWindow.xaml[m
[1m+++ /dev/null[m
[36m@@ -1,84 +0,0 @@[m
[31m-﻿<Window x:Class="gameCenter.MainWindow"[m
[31m-        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m
[31m-        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"[m
[31m-        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"[m
[31m-        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"[m
[31m-        xmlns:local="clr-namespace:gameCenter"[m
[31m-        mc:Ignorable="d"[m
[31m-        Title="ProjectCenter_MainWindow" Height="800" Width="1400"[m
[31m-        ResizeMode="NoResize">[m
[31m-    <Grid>[m
[31m-        <Grid.ColumnDefinitions>[m
[31m-            <ColumnDefinition Width="0.2*"></ColumnDefinition>[m
[31m-            <ColumnDefinition Width="2*"></ColumnDefinition>[m
[31m-            <ColumnDefinition Width="2*"></ColumnDefinition>[m
[31m-            <ColumnDefinition Width="0.2*"></ColumnDefinition>[m
[31m-        </Grid.ColumnDefinitions>[m
[31m-        <Grid.RowDefinitions>[m
[31m-            <RowDefinition Height="0.5*"></RowDefinition>[m
[31m-            <RowDefinition Height="0.5*"></RowDefinition>[m
[31m-            <RowDefinition Height="2*"></RowDefinition>[m
[31m-        </Grid.RowDefinitions>[m
[31m-        <Grid.Background>[m
[31m-            <ImageBrush ImageSource="/Images/backGround.jpg" Opacity="0.2"/>[m
[31m-        </Grid.Background>[m
[31m-[m
[31m-        <Label x:Name="addUserTitle"[m
[31m-               Grid.Column="0"[m
[31m-               Grid.Row="0"[m
[31m-               VerticalContentAlignment="top"[m
[31m-               Content="Project center" [m
[31m-               HorizontalContentAlignment="Center" [m
[31m-               Grid.ColumnSpan="5"[m
[31m-               FontWeight="Bold"[m
[31m-               FontSize="60"[m
[31m-               Background="AliceBlue"[m
[31m-               FontFamily="{StaticResource DefaultFont}"[m
[31m-        />[m
[31m-[m
[31m-        <Label [m
[31m-            x:Name="GamesLabel"[m
[31m-            FontWeight="Bold"[m
[31m-            Content="Games" [m
[31m-            Grid.Row="1"[m
[31m-            Grid.Column="1" [m
[31m-            VerticalAlignment="Center" [m
[31m-            HorizontalAlignment="Center"[m
[31m-            FontSize="26"[m
[31m-            FontFamily="{StaticResource DefaultFont}"[m
[31m-        />[m
[31m-[m
[31m-        <Label [m
[31m-            x:Name="ProjectsLabel"[m
[31m-            FontWeight="Bold"[m
[31m-            Content="General projects" [m
[31m-            Grid.Row="1"[m
[31m-            Grid.Column="2" [m
[31m-            VerticalAlignment="Center" [m
[31m-            HorizontalAlignment="Center"[m
[31m-            FontSize="26"[m
[31m-            FontFamily="{StaticResource DefaultFont}"[m
[31m-        />[m
[31m-[m
[31m-        <Label             x:Name="DateLabel"            Content="Date"             Grid.Row="0"             Grid.Column="1"             Grid.ColumnSpan="2"             HorizontalContentAlignment="Center"            VerticalContentAlignment="Bottom"             FontSize="20"            FontFamily="{StaticResource DefaultFont}"        />[m
[31m-        <Label             x:Name="GameText"            Content="Please select a project"             Grid.Row="2"             Grid.Column="0"             Grid.ColumnSpan="4"            Height="50"            Background="AliceBlue"            HorizontalContentAlignment="Center"            VerticalContentAlignment="Center"            FontSize="20"            FontFamily="{StaticResource DefaultFont}"[m
[31m-        />[m
[31m-[m
[31m-        <WrapPanel Grid.Row="2" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Top"[m
[31m-         >[m
[31m-            <Image x:Name="Image1" Source="/Images/UserManagerIcon.png" Width="100" Margin="20" MouseEnter="Image_MouseEnter" MouseLeave="Image_MouseLeave" MouseLeftButtonUp="Image1_MouseLeftButtonUp"/>[m
[31m-            <Image x:Name="Image2" Source="/Images/ToDoListIcon.png" Width="100" Margin="20" MouseEnter="Image_MouseEnter" MouseLeave="Image_MouseLeave" MouseLeftButtonUp="Image2_MouseLeftButtonUp"/>[m
[31m-            <Image x:Name="Image3" Source="/Images/CurrencyConverterIcon.png" Width="100" Margin="20" MouseEnter="Image_MouseEnter" MouseLeave="Image_MouseLeave" MouseLeftButtonUp="Image3_MouseLeftButtonUp"/>[m
[31m-        </WrapPanel>[m
[31m-        [m
[31m-        <WrapPanel Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top">[m
[31m-            <Image x:Name="Image4" Source="/Images/SimonSaysIcon.png" Width="100" Margin="20" MouseEnter="Image_MouseEnter" MouseLeave="Image_MouseLeave" MouseLeftButtonUp="Image4_MouseLeftButtonUp"/>[m
[31m-            <Image x:Name="Image5" Source="/Images/TicTacToeIcon.png" Width="100" Margin="20" MouseEnter="Image_MouseEnter" MouseLeave="Image_MouseLeave" MouseLeftButtonUp="Image5_MouseLeftButtonUp"/>[m
[31m-            <Image x:Name="Image6" Source="/Images/2048icon.png" Width="100" Margin="20" MouseEnter="Image_MouseEnter" MouseLeave="Image_MouseLeave" MouseLeftButtonUp="Image6_MouseLeftButtonUp" />[m
[31m-        </WrapPanel>[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-    </Grid>[m
[31m-</Window>[m
[1mdiff --git a/gameCenter/MainWindow.xaml.cs b/gameCenter/MainWindow.xaml.cs[m
[1mdeleted file mode 100644[m
[1mindex ba789ed..0000000[m
[1m--- a/gameCenter/MainWindow.xaml.cs[m
[1m+++ /dev/null[m
[36m@@ -1,153 +0,0 @@[m
[31m-﻿using gameCenter.Projects;[m
[31m-using gameCenter.Projects.CurrencyConverter;[m
[31m-using gameCenter.Projects.UserManager;[m
[31m-using gameCenter.Projects.SimonSays;[m
[31m-using gameCenter.Projects.TicTacToe;[m
[31m-using gameCenter.Projects.TodoList;[m
[31m-using System;[m
[31m-using System.Windows;[m
[31m-using System.Windows.Controls;[m
[31m-using System.Windows.Input;[m
[31m-using System.Windows.Threading;[m
[31m-using gameCenter.Projects._2048game;[m
[31m-using System.Collections.Generic;[m
[31m-[m
[31m-namespace gameCenter[m
[31m-{[m
[31m-    public partial class MainWindow : Window[m
[31m-[m
[31m-    {[m
[31m-        public MainWindow()[m
[31m-        {[m
[31m-            InitializeComponent();[m
[31m-            DispatcherTimer clock = new()[m
[31m-            {[m
[31m-                Interval = TimeSpan.FromSeconds(1)[m
[31m-            };[m
[31m-[m
[31m-            clock.Tick += ShowCurrentDate!;[m
[31m-            clock.Start();[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        private void ShowCurrentDate(object sender, EventArgs e)[m
[31m-        {[m
[31m-            DateLabel.Content = DateTime.Now.ToString("dddd, dd, MMMM yyyy HH:mm:ss");[m
[31m-        }[m
[31m-[m
[31m-        private void Image_MouseEnter(object sender, MouseEventArgs e)[m
[31m-        {[m
[31m-            Image image = (sender as Image)!;[m
[31m-            image.Opacity = 0.7;[m
[31m-            GameText.Content = (image.Name) switch[m
[31m-            {[m
[31m-                "Image1" => "User Management System",[m
[31m-                "Image2" => "To Do List Task Manager",[m
[31m-                "Image3" => "Currency Converter",[m
[31m-                "Image4" => "Simon Says Game",[m
[31m-                "Image5" => "TicTacToe Game",[m
[31m-                "Image6" => "2048 Game",[m
[31m-                _ => "Please pick a project"[m
[31m-            };[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-[m
[31m-        private void Image_MouseLeave(object sender, MouseEventArgs e)[m
[31m-        {[m
[31m-            (sender as Image)!.Opacity = 1;[m
[31m-            GameText.Content = "Please pick a project";[m
[31m-        }[m
[31m-[m
[31m-        private void Image1_MouseLeftButtonUp(object sender, MouseButtonEventArgs e)[m
[31m-        {[m
[31m-            UserManagerView UserManagementSystem = new();[m
[31m-            projectPresentationPage presentetion = new();[m
[31m-            presentetion.OnStart("User Management System" , "The mini-project is a standalone user\n" +[m
[31m-                "management system that provides\n" +[m
[31m-                "a comprehensive interface for managing user information.\n" +[m
[31m-                " It enables administrators to view, add, remove, update, toggle login status,\n" +[m
[31m-                "and toggle freeze status for users.\n" +[m
[31m-                "The user details are displayed in a DataGrid,\n" +[m
[31m-                "and administrators can interact with the users using various buttons and input fields.",[m
[31m-                Image1.Source, UserManagementSystem);[m
[31m-            presentetion.ShowDialog();[m
[31m-        }[m
[31m-[m
[31m-        private void Image2_MouseLeftButtonUp(object sender, MouseButtonEventArgs e)[m
[31m-        {[m
[31m-            TodoList toDoList = new();[m
[31m-            projectPresentationPage presentetion = new();[m
[31m-            presentetion.OnStart("To Do List Task Manager", "The mini-project is a straightforward to-do list\n" +[m
[31m-                "application facilitating task management.\n" +[m
[31m-                "Users can add, edit, delete, and toggle the completion status of tasks.\n" +[m
[31m-                "Each task is represented in a ListBox with checkboxes\n" +[m
[31m-                "for completion and editable text for descriptions.\n" +[m
[31m-                "Notably, tasks can be saved and are automatically loaded from a file.", Image2.Source, toDoList, usesFileIO:true);[m
[31m-            presentetion.ShowDialog();[m
[31m-        }[m
[31m-        private void Image3_MouseLeftButtonUp(object sender, MouseButtonEventArgs e)[m
[31m-        {[m
[31m-            CurrencyConverterView currencyProject = new();[m
[31m-            projectPresentationPage presentetion = new();[m
[31m-            presentetion.OnStart("Currency Converter", "The mini-project is a currency converter application that\n" +[m
[31m-                "facilitates the conversion of one currency to another based\n" +[m
[31m-                "on real-time exchange rates obtained through HTTP requests.\n" +[m
[31m-                "Users can input the amount to be converted, choose the source currency,\n" +[m
[31m-                "select the target currency, and then click the \"Convert\" button.\n" +[m
[31m-                "The converted amount is displayed along with the currencies involved in the conversion.\n" +[m
[31m-                "The application fetches exchange rates asynchronously through\n" +[m
[31m-                "HTTP requests and handles errors appropriately.",[m
[31m-                Image3.Source, currencyProject, usesAPI: true);[m
[31m-            presentetion.ShowDialog();[m
[31m-        }[m
[31m-[m
[31m-        private void Image4_MouseLeftButtonUp(object sender, MouseButtonEventArgs e)[m
[31m-        {[m
[31m-            SimonSaysView simonGame = new();[m
[31m-            projectPresentationPage presentetion = new();[m
[31m-            presentetion.OnStart("Simon Says", "The Simon Says game is a classic\n" +[m
[31m-                "memory and pattern recognition challenge with an interactive\n" +[m
[31m-                "and visually appealing user interface. Players must replicate a sequence of colored buttons\n" +[m
[31m-                "(Red, Yellow, Green, Blue) generated by the game to test\n" +[m
[31m-                "their memory skills. The game offers adjustable difficulty\n" +[m
[31m-                "levels and features a score system. Top scores are\n" +[m
[31m-                "loaded from a file, providing a benchmark for players.\n" +[m
[31m-                "After completing a round, players can submit their scores.\n" +[m
[31m-                "There's also a difficulty selector that will affect the speed of the game\n" +[m
[31m-                "and score the player accoridngly.", Image4.Source, simonGame, usesFileIO:true);[m
[31m-            presentetion.ShowDialog();[m
[31m-        }[m
[31m-[m
[31m-        private void Image5_MouseLeftButtonUp(object sender, MouseButtonEventArgs e)[m
[31m-        {[m
[31m-            TicTacToeView tic = new();[m
[31m-            projectPresentationPage presentetion = new();[m
[31m-            presentetion.OnStart("Tic Tac Toe", "This mini-project is a simple\n" +[m
[31m-                "implementation of the classic Tic-Tac-Toe game.\n" +[m
[31m-                "Players take turns clicking on a 3x3 grid of buttons,\n" +[m
[31m-                "aiming to align three of their respective symbols ('X' or 'O') horizontally,\n" +[m
[31m-                "vertically, or diagonally to win the game.\n" +[m
[31m-                "The game checks for a winner or a draw after each move,\n" +[m
[31m-                "displaying a corresponding message box.\n" +[m
[31m-                "The interface is created using XAML, and the logic is implemented in C#.", Image5.Source, tic);[m
[31m-            presentetion.ShowDialog();[m
[31m-        }[m
[31m-[m
[31m-        private void Image6_MouseLeftButtonUp(object sender, MouseButtonEventArgs e)[m
[31m-        {[m
[31m-            _2048View game = new();[m
[31m-            projectPresentationPage presentetion = new();[m
[31m-            presentetion.OnStart("2048 Game", "This project is a 2048 game implementationin C# using the WPF framework.\n" +[m
[31m-                "The game features a grid where numbered tiles move as the player makes a move.\n" +[m
[31m-                "The objective is to combine tiles with the same number to reach the elusive 2048 tile.\n" +[m
[31m-                "The game dynamically updates the UI with each move,\n" +[m
[31m-                "displaying the current score and colored tiles based on their values.\n" +[m
[31m-                "Users can play using arrow keys\n" +[m
[31m-                " and the game ends either when the player wins\n" +[m
[31m-                "by reaching the 2048 tile or when there are no more valid moves.",[m
[31m-                Image6.Source, game);[m
[31m-            presentetion.ShowDialog();[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/2048game/2048View.xaml b/gameCenter/Projects/2048game/2048View.xaml[m
[1mdeleted file mode 100644[m
[1mindex 29c5f23..0000000[m
[1m--- a/gameCenter/Projects/2048game/2048View.xaml[m
[1m+++ /dev/null[m
[36m@@ -1,80 +0,0 @@[m
[31m-﻿<Window x:Class="gameCenter.Projects._2048game._2048View"[m
[31m-        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m
[31m-        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"[m
[31m-        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"[m
[31m-        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"[m
[31m-        xmlns:local="clr-namespace:gameCenter.Projects._2048game"[m
[31m-        mc:Ignorable="d"[m
[31m-        Title="2048" Height="775" Width="450"[m
[31m-        ResizeMode="NoResize">[m
[31m-    <Grid x:Name="mainGrid">[m
[31m-        <Grid.RowDefinitions>[m
[31m-            <RowDefinition Height="2*"/>[m
[31m-            <RowDefinition Height="5*"/>[m
[31m-            <RowDefinition Height="1.5*"/>[m
[31m-        </Grid.RowDefinitions>[m
[31m-        <Grid.Background>[m
[31m-            <ImageBrush ImageSource="/Images/backGround.jpg" Opacity="0.2" Stretch="UniformToFill"/>[m
[31m-        </Grid.Background>[m
[31m-[m
[31m-        <Border Panel.ZIndex="2" Grid.Row="1" Height="150" Width="300" Margin="75,82,75,164" Background="AliceBlue" BorderBrush="Beige" BorderThickness="5" Visibility="Collapsed"[m
[31m-                x:Name="gameOverBorder">[m
[31m-        <TextBlock[m
[31m-                    Margin="40"[m
[31m-                    x:Name="gameOverText"[m
[31m-                    Text="Game Over"[m
[31m-                    TextAlignment="Center"[m
[31m-                    FontSize="35"[m
[31m-                    FontWeight="ExtraBlack"/>[m
[31m-        </Border>[m
[31m-[m
[31m-[m
[31m-        <Grid>[m
[31m-            <Grid.RowDefinitions>[m
[31m-                <RowDefinition Height="1*"/>[m
[31m-                <RowDefinition Height="1*"/>[m
[31m-            </Grid.RowDefinitions>[m
[31m-            <Button[m
[31m-            x:Name="newGameBtn" Content="New Game" Grid.Row="0" Background="Beige" FontWeight="Bold" Click="Button_Click" Width="100" Height="50"/>[m
[31m-[m
[31m-            <TextBlock x:Name="ScoreText" Text="Score: 0" TextAlignment="Center" Grid.Row="1"[m
[31m-                   FontSize="20" Margin="148,25,148,25"/>[m
[31m-        </Grid>[m
[31m-[m
[31m-[m
[31m-        <Border BorderBrush="DarkCyan" BorderThickness="7" Grid.Row="1" Background="LightCoral">[m
[31m-            <Grid x:Name="gameGrid">[m
[31m-                <Grid.ColumnDefinitions>[m
[31m-                    <ColumnDefinition Width="1*" />[m
[31m-                    <ColumnDefinition Width="1*" />[m
[31m-                    <ColumnDefinition Width="1*" />[m
[31m-                    <ColumnDefinition Width="1*" />[m
[31m-                </Grid.ColumnDefinitions>[m
[31m-                <Grid.RowDefinitions>[m
[31m-                    <RowDefinition Height="1*" />[m
[31m-                    <RowDefinition Height="1*" />[m
[31m-                    <RowDefinition Height="1*" />[m
[31m-                    <RowDefinition Height="1*" />[m
[31m-                </Grid.RowDefinitions>[m
[31m-            </Grid>[m
[31m-[m
[31m-        </Border>[m
[31m-[m
[31m-        <Border Grid.Row="2">[m
[31m-            <Grid>[m
[31m-                <Grid.RowDefinitions>[m
[31m-                    <RowDefinition Height="1*"/>[m
[31m-                    <RowDefinition Height="3*"/>[m
[31m-                </Grid.RowDefinitions>[m
[31m-                <TextBlock Text="How to play:" FontSize="17" FontWeight="Bold"/>[m
[31m-                <TextBlock Grid.Row="2" FontSize="11" FontWeight="Bold">[m
[31m-                    Use the arrow keys to move the tiles around and combine tiles of the same number. <LineBreak/>[m
[31m-                    Every move will spawn one new tile that has a 2 or 4 value. <LineBreak/>[m
[31m-                    Gain points by combining bigger and bigger numbers! <LineBreak/>[m
[31m-                    Getting a tile to 2048 wins the game! <LineBreak/> <LineBreak/>[m
[31m-                    Filling the board up with tiles with no more valid moves will lose the game.[m
[31m-                </TextBlock>[m
[31m-            </Grid>[m
[31m-        </Border>[m
[31m-    </Grid>[m
[31m-</Window>[m
[1mdiff --git a/gameCenter/Projects/2048game/2048View.xaml.cs b/gameCenter/Projects/2048game/2048View.xaml.cs[m
[1mdeleted file mode 100644[m
[1mindex 3436450..0000000[m
[1m--- a/gameCenter/Projects/2048game/2048View.xaml.cs[m
[1m+++ /dev/null[m
[36m@@ -1,169 +0,0 @@[m
[31m-﻿using gameCenter.Projects._2048game.Models;[m
[31m-using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows;[m
[31m-using System.Windows.Controls;[m
[31m-using System.Windows.Data;[m
[31m-using System.Windows.Documents;[m
[31m-using System.Windows.Input;[m
[31m-using System.Windows.Media;[m
[31m-using System.Windows.Media.Imaging;[m
[31m-using System.Windows.Shapes;[m
[31m-using static gameCenter.Projects._2048game.Models.GameModel;[m
[31m-[m
[31m-namespace gameCenter.Projects._2048game[m
[31m-{[m
[31m-    /// <summary>[m
[31m-    /// Interaction logic for _2048View.xaml[m
[31m-    /// </summary>[m
[31m-    public partial class _2048View : Window[m
[31m-    {[m
[31m-        private GameModel board;[m
[31m-[m
[31m-        public _2048View()[m
[31m-        {[m
[31m-            InitializeComponent();[m
[31m-            InitializeGame();[m
[31m-[m
[31m-            this.PreviewKeyDown += Window_KeyDown;[m
[31m-        }[m
[31m-[m
[31m-        private void InitializeGame()[m
[31m-        {[m
[31m-            board = new GameModel(4);[m
[31m-            gameOverBorder.Visibility = Visibility.Collapsed;[m
[31m-            SpawnInitialTiles();[m
[31m-            UpdateUI();[m
[31m-        }[m
[31m-        private void SpawnInitialTiles()[m
[31m-        {[m
[31m-            Random rand = new Random();[m
[31m-[m
[31m-            board.SpawnTile(rand.Next(board.Size), rand.Next(board.Size), rand.Next(1, 3) * 2);[m
[31m-            board.SpawnTile(rand.Next(board.Size), rand.Next(board.Size), rand.Next(1, 3) * 2);[m
[31m-            UpdateUI();[m
[31m-        }[m
[31m-[m
[31m-        public void UpdateUI()[m
[31m-        {[m
[31m-            gameGrid.Children.Clear();[m
[31m-[m
[31m-            ScoreText.Text = $"Score: {board.Score}";[m
[31m-[m
[31m-            for (int row = 0; row < board.Size; row++)[m
[31m-            {[m
[31m-                for (int col = 0; col < board.Size; col++)[m
[31m-                {[m
[31m-                    TileModel tile = board.Tiles[row, col];[m
[31m-[m
[31m-                    if (tile != null)[m
[31m-                    {[m
[31m-                        Border cellBorder = new Border[m
[31m-                        {[m
[31m-                            BorderBrush = new SolidColorBrush(Color.FromArgb(128, 0, 139, 139)),[m
[31m-                            BorderThickness = new Thickness(2),[m
[31m-                        };[m
[31m-[m
[31m-                        TextBlock tileText = new TextBlock[m
[31m-                        {[m
[31m-                            Text = tile.Value.ToString(),[m
[31m-                            Background = GetTileColor(tile.Value),[m
[31m-                            HorizontalAlignment = HorizontalAlignment.Center,[m
[31m-                            VerticalAlignment = VerticalAlignment.Center,[m
[31m-                            TextAlignment = TextAlignment.Center,[m
[31m-                            Padding = new Thickness(50),[m
[31m-                            FontSize = 30,[m
[31m-                            FontWeight = FontWeights.Bold,[m
[31m-                        };[m
[31m-[m
[31m-                        cellBorder.Child = tileText;[m
[31m-[m
[31m-                        Grid.SetRow(cellBorder, row);[m
[31m-                        Grid.SetColumn(cellBorder, col);[m
[31m-[m
[31m-                        gameGrid.Children.Add(cellBorder);[m
[31m-                    }[m
[31m-                    else[m
[31m-                    {[m
[31m-                        Border cellBorder = new Border[m
[31m-                        {[m
[31m-                            BorderBrush = new SolidColorBrush(Color.FromArgb(128, 0, 139, 139)),[m
[31m-                            BorderThickness = new Thickness(2),[m
[31m-                        };[m
[31m-                        Grid.SetRow(cellBorder, row);[m
[31m-                        Grid.SetColumn(cellBorder, col);[m
[31m-[m
[31m-                        gameGrid.Children.Add(cellBorder);[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        private void Window_KeyDown(object sender, KeyEventArgs e)[m
[31m-        {[m
[31m-[m
[31m-            if (board.gameWon)[m
[31m-            {[m
[31m-                board.gameWon = true;[m
[31m-                gameOverBorder.Visibility = Visibility.Visible;[m
[31m-                gameOverText.Text = "You Won!";[m
[31m-            }[m
[31m-[m
[31m-            if (board.IsGameOver())[m
[31m-            {[m
[31m-                board.gameOver = true;[m
[31m-                gameOverBorder.Visibility = Visibility.Visible;[m
[31m-                gameOverText.Text = "Game Over";[m
[31m-                return;[m
[31m-            }[m
[31m-[m
[31m-            switch (e.Key)[m
[31m-            {[m
[31m-                case Key.Up:[m
[31m-                    board.MoveTiles(GameModel.Direction.Up);[m
[31m-                    break;[m
[31m-                case Key.Down:[m
[31m-                    board.MoveTiles(GameModel.Direction.Down);[m
[31m-                    break;[m
[31m-                case Key.Left:[m
[31m-                    board.MoveTiles(GameModel.Direction.Left);[m
[31m-                    break;[m
[31m-                case Key.Right:[m
[31m-                    board.MoveTiles(GameModel.Direction.Right);[m
[31m-                    break;[m
[31m-            }[m
[31m-[m
[31m-            UpdateUI();[m
[31m-        }[m
[31m-[m
[31m-        private SolidColorBrush GetTileColor(int value)[m
[31m-        {[m
[31m-[m
[31m-            return new SolidColorBrush(value switch[m
[31m-            {[m
[31m-                2 => Colors.LightGray,[m
[31m-                4 => Colors.LightGreen,[m
[31m-                8 => Colors.YellowGreen,[m
[31m-                16 => Colors.LightYellow,[m
[31m-                32 => Colors.Yellow,[m
[31m-                64 => Colors.Orange,[m
[31m-                128 => Colors.PaleVioletRed,[m
[31m-                256 => Colors.MediumVioletRed,[m
[31m-                512 => Colors.Red,[m
[31m-                1024 => Colors.DarkOrange,[m
[31m-                2048 => Colors.OrangeRed,[m
[31m-[m
[31m-                _ => Colors.LightGray,[m
[31m-            });[m
[31m-        }[m
[31m-[m
[31m-        private void Button_Click(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            board.gameOver = false;[m
[31m-            InitializeGame();[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/2048game/Models/GameModel.cs b/gameCenter/Projects/2048game/Models/GameModel.cs[m
[1mdeleted file mode 100644[m
[1mindex f67f993..0000000[m
[1m--- a/gameCenter/Projects/2048game/Models/GameModel.cs[m
[1m+++ /dev/null[m
[36m@@ -1,372 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows;[m
[31m-using System.Windows.Controls;[m
[31m-using System.Windows.Documents;[m
[31m-[m
[31m-namespace gameCenter.Projects._2048game.Models[m
[31m-{[m
[31m-    internal class GameModel[m
[31m-    {[m
[31m-        public enum Direction[m
[31m-        {[m
[31m-            Up,[m
[31m-            Down,[m
[31m-            Left,[m
[31m-            Right[m
[31m-        }[m
[31m-        public int Score {  get; set; }[m
[31m-        public bool gameOver {  get; set; }[m
[31m-        public bool gameWon { get; set; }[m
[31m-        public int Size { get; private set; }[m
[31m-        public TileModel[,] Tiles { get; private set; }[m
[31m-        public GameModel(int size) [m
[31m-        {[m
[31m-            Score = 0;[m
[31m-            gameOver = false;[m
[31m-            gameWon = false;[m
[31m-            Size = size;[m
[31m-            Tiles = new TileModel[size, size];[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-        public void SpawnTile(int row, int column, int value)[m
[31m-        {[m
[31m-            if (Tiles[row, column] == null)[m
[31m-            {[m
[31m-                Tiles[row, column] = new TileModel(value);[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                Random rand = new Random();[m
[31m-                SpawnTile(rand.Next(Size), rand.Next(Size), value);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        public void MoveTiles(Direction direction)[m
[31m-        {[m
[31m-            int startRow, endRow, startCol, endCol, stepRow, stepCol;[m
[31m-[m
[31m-            switch (direction)[m
[31m-            {[m
[31m-                case Direction.Up:[m
[31m-                    startRow = 1;[m
[31m-                    endRow = Size - 1;[m
[31m-                    startCol = 0;[m
[31m-                    endCol = Size - 1;[m
[31m-                    stepRow = 1;[m
[31m-                    stepCol = 1;[m
[31m-                    break;[m
[31m-                case Direction.Down:[m
[31m-                    startRow = Size - 2;[m
[31m-                    endRow = 0;[m
[31m-                    startCol = 0;[m
[31m-                    endCol = Size - 1;[m
[31m-                    stepRow = -1;[m
[31m-                    stepCol = 1;[m
[31m-                    break;[m
[31m-                case Direction.Left:[m
[31m-                    startRow = 0;[m
[31m-                    endRow = Size - 1;[m
[31m-                    startCol = 1;[m
[31m-                    endCol = Size - 1;[m
[31m-                    stepRow = 1;[m
[31m-                    stepCol = 1;[m
[31m-                    break;[m
[31m-                case Direction.Right:[m
[31m-                    startRow = 0;[m
[31m-                    endRow = Size - 1;[m
[31m-                    startCol = Size - 2;[m
[31m-                    endCol = 0;[m
[31m-                    stepRow = 1;[m
[31m-                    stepCol = -1;[m
[31m-                    break;[m
[31m-                default:[m
[31m-                    return;[m
[31m-            }[m
[31m-[m
[31m-            bool validMove = false;[m
[31m-[m
[31m-            for (int row = startRow; row != endRow + stepRow; row += stepRow)[m
[31m-            {[m
[31m-                for (int col = startCol; col != endCol + stepCol; col += stepCol)[m
[31m-                {[m
[31m-                    TileModel tile = Tiles[row, col];[m
[31m-[m
[31m-                    if (tile != null)[m
[31m-                    {[m
[31m-                        switch (direction)[m
[31m-                        {[m
[31m-                            case Direction.Up:[m
[31m-                                if (IsValidMoveUp(tile, row, col))[m
[31m-                                {[m
[31m-                                    validMove = true;[m
[31m-                                    break;[m
[31m-                                }[m
[31m-                                break;[m
[31m-                            case Direction.Down:[m
[31m-                                if (IsValidMoveDown(tile, row, col))[m
[31m-                                {[m
[31m-                                    validMove = true;[m
[31m-                                    break;[m
[31m-                                }[m
[31m-                                break;[m
[31m-                            case Direction.Left:[m
[31m-                                if (IsValidMoveLeft(tile, row, col))[m
[31m-                                {[m
[31m-                                    validMove = true;[m
[31m-                                    break;[m
[31m-                                }[m
[31m-                                break;[m
[31m-                            case Direction.Right:[m
[31m-                                if (IsValidMoveRight(tile, row, col))[m
[31m-                                {[m
[31m-                                    validMove = true;[m
[31m-                                    break;[m
[31m-                                }[m
[31m-                                break;[m
[31m-                        }[m
[31m-                    }[m
[31m-                }[m
[31m-[m
[31m-                if (validMove)[m
[31m-                {[m
[31m-                    break;[m
[31m-                }[m
[31m-            }[m
[31m-[m
[31m-            if (!validMove) return;[m
[31m-[m
[31m-            for (int row = startRow; row != endRow + stepRow; row += stepRow)[m
[31m-            {[m
[31m-                for (int col = startCol; col != endCol + stepCol; col += stepCol)[m
[31m-                {[m
[31m-                    TileModel tile = Tiles[row, col];[m
[31m-[m
[31m-                    if (tile != null && validMove)[m
[31m-                    {[m
[31m-                        switch (direction)[m
[31m-                        {[m
[31m-                            case Direction.Up:[m
[31m-                                MoveTileUp(tile, row, col);[m
[31m-                                break;[m
[31m-                            case Direction.Down:[m
[31m-                                MoveTileDown(tile, row, col);[m
[31m-                                break;[m
[31m-                            case Direction.Left:[m
[31m-                                MoveTileLeft(tile, row, col);[m
[31m-                                break;[m
[31m-                            case Direction.Right:[m
[31m-                                MoveTileRight(tile, row, col);[m
[31m-                                break;[m
[31m-                        }[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-[m
[31m-            Random rand = new Random();[m
[31m-            SpawnTile(rand.Next(Size), rand.Next(Size), rand.Next(1, 3) * 2);[m
[31m-        }[m
[31m-[m
[31m-        private bool IsValidMoveUp(TileModel tile, int row, int col)[m
[31m-        {[m
[31m-            int targetRow = row - 1;[m
[31m-[m
[31m-            return targetRow >= 0 && (Tiles[targetRow, col] == null || Tiles[targetRow, col].Value == tile.Value);[m
[31m-        }[m
[31m-[m
[31m-        private bool IsValidMoveDown(TileModel tile, int row, int col)[m
[31m-        {[m
[31m-            int targetRow = row + 1;[m
[31m-[m
[31m-            return targetRow < Size && (Tiles[targetRow, col] == null || Tiles[targetRow, col].Value == tile.Value);[m
[31m-        }[m
[31m-[m
[31m-        private bool IsValidMoveLeft(TileModel tile, int row, int col)[m
[31m-        {[m
[31m-            int targetCol = col - 1;[m
[31m-[m
[31m-            return targetCol >= 0 && (Tiles[row, targetCol] == null || Tiles[row, targetCol].Value == tile.Value);[m
[31m-        }[m
[31m-[m
[31m-        private bool IsValidMoveRight(TileModel tile, int row, int col)[m
[31m-        {[m
[31m-            int targetCol = col + 1;[m
[31m-[m
[31m-            return targetCol < Size && (Tiles[row, targetCol] == null || Tiles[row, targetCol].Value == tile.Value);[m
[31m-        }[m
[31m-[m
[31m-        private void MoveTileUp(TileModel tile, int row, int col)[m
[31m-        {[m
[31m-            int targetRow = row - 1;[m
[31m-[m
[31m-            if (targetRow >= 0 && (Tiles[targetRow, col] == null || Tiles[targetRow, col].Value == tile.Value))[m
[31m-            {[m
[31m-                while (targetRow >= 0 && (Tiles[targetRow, col] == null || Tiles[targetRow, col].Value == tile.Value))[m
[31m-                {[m
[31m-                    if (Tiles[targetRow, col] == null)[m
[31m-                    {[m
[31m-                        Tiles[targetRow, col] = tile;[m
[31m-                        Tiles[row, col] = null;[m
[31m-                        row = targetRow;[m
[31m-                        targetRow--;[m
[31m-                    }[m
[31m-                    else if (Tiles[targetRow, col].Value == tile.Value)[m
[31m-                    {[m
[31m-                        MergeTiles(tile, targetRow, col, Direction.Up);[m
[31m-                        break;[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                return;[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        private void MoveTileDown(TileModel tile, int row, int col)[m
[31m-        {[m
[31m-            int targetRow = row + 1;[m
[31m-[m
[31m-            if (targetRow < Size && (Tiles[targetRow, col] == null || Tiles[targetRow, col].Value == tile.Value))[m
[31m-            {[m
[31m-                while (targetRow < Size && (Tiles[targetRow, col] == null || Tiles[targetRow, col].Value == tile.Value))[m
[31m-                {[m
[31m-                    if (Tiles[targetRow, col] == null)[m
[31m-                    {[m
[31m-                        Tiles[targetRow, col] = tile;[m
[31m-                        Tiles[row, col] = null;[m
[31m-                        row = targetRow;[m
[31m-                        targetRow++;[m
[31m-                    }[m
[31m-                    else if (Tiles[targetRow, col].Value == tile.Value)[m
[31m-                    {[m
[31m-                        MergeTiles(tile, targetRow, col, Direction.Down);[m
[31m-                        break;[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                return;[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        private void MoveTileLeft(TileModel tile, int row, int col)[m
[31m-        {[m
[31m-            int targetCol = col - 1;[m
[31m-[m
[31m-            if (targetCol >= 0 && (Tiles[row, targetCol] == null || Tiles[row, targetCol].Value == tile.Value))[m
[31m-            {[m
[31m-                while (targetCol >= 0 && (Tiles[row, targetCol] == null || Tiles[row, targetCol].Value == tile.Value))[m
[31m-                {[m
[31m-                    if (Tiles[row, targetCol] == null)[m
[31m-                    {[m
[31m-                        Tiles[row, targetCol] = tile;[m
[31m-                        Tiles[row, col] = null;[m
[31m-                        col = targetCol;[m
[31m-                        targetCol--;[m
[31m-                    }[m
[31m-                    else if (Tiles[row, targetCol].Value == tile.Value)[m
[31m-                    {[m
[31m-                        MergeTiles(tile, row, targetCol, Direction.Left);[m
[31m-                        break;[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                return;[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        private void MoveTileRight(TileModel tile, int row, int col)[m
[31m-        {[m
[31m-            int targetCol = col + 1;[m
[31m-[m
[31m-            if (targetCol < Size && (Tiles[row, targetCol] == null || Tiles[row, targetCol].Value == tile.Value))[m
[31m-            {[m
[31m-                while (targetCol < Size && (Tiles[row, targetCol] == null || Tiles[row, targetCol].Value == tile.Value))[m
[31m-                {[m
[31m-                    if (Tiles[row, targetCol] == null)[m
[31m-                    {[m
[31m-                        Tiles[row, targetCol] = tile;[m
[31m-                        Tiles[row, col] = null;[m
[31m-                        col = targetCol;[m
[31m-                        targetCol++;[m
[31m-                    }[m
[31m-                    else if (Tiles[row, targetCol].Value == tile.Value)[m
[31m-                    {[m
[31m-                        MergeTiles(tile, row, targetCol, Direction.Right);[m
[31m-                        break;[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                return;[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        private void MergeTiles(TileModel tile, int row, int col, Direction direction)[m
[31m-        {[m
[31m-            tile.Value *= 2;[m
[31m-            Score += tile.Value;[m
[31m-            Tiles[row, col] = tile;[m
[31m-[m
[31m-            switch (direction)[m
[31m-            {[m
[31m-                case Direction.Up:[m
[31m-                    Tiles[row + 1, col] = null;[m
[31m-                    break;[m
[31m-                case Direction.Down:[m
[31m-                    Tiles[row - 1, col] = null;[m
[31m-                    break;[m
[31m-                case Direction.Left:[m
[31m-                    Tiles[row, col + 1] = null;[m
[31m-                    break;[m
[31m-                case Direction.Right:[m
[31m-                    Tiles[row, col - 1] = null;[m
[31m-                    break;[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-        public bool IsGameOver()[m
[31m-        {[m
[31m-            for (int row = 0; row < Size; row++)[m
[31m-            {[m
[31m-                for (int col = 0; col < Size; col++)[m
[31m-                {[m
[31m-                    if (Tiles[row, col] == null ||[m
[31m-                        (row > 0 && Tiles[row - 1, col] != null && Tiles[row - 1, col].Value == Tiles[row, col].Value) ||[m
[31m-                        (row < Size - 1 && Tiles[row + 1, col] != null && Tiles[row + 1, col].Value == Tiles[row, col].Value) ||[m
[31m-                        (col > 0 && Tiles[row, col - 1] != null && Tiles[row, col - 1].Value == Tiles[row, col].Value) ||[m
[31m-                        (col < Size - 1 && Tiles[row, col + 1] != null && Tiles[row, col + 1].Value == Tiles[row, col].Value))[m
[31m-                    {[m
[31m-                        return false; [m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-            return true; [m
[31m-        }[m
[31m-[m
[31m-        public bool IsGameWon()[m
[31m-        {[m
[31m-            for (int row = 0; row < Size; row++)[m
[31m-            {[m
[31m-                for (int col = 0; col < Size; col++)[m
[31m-                {[m
[31m-                    if (Tiles[row,col].Value == 2048)[m
[31m-                    {[m
[31m-                        return true;[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-            return false;[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/2048game/Models/TileModel.cs b/gameCenter/Projects/2048game/Models/TileModel.cs[m
[1mdeleted file mode 100644[m
[1mindex 07af2a8..0000000[m
[1m--- a/gameCenter/Projects/2048game/Models/TileModel.cs[m
[1m+++ /dev/null[m
[36m@@ -1,37 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows;[m
[31m-using System.Windows.Controls;[m
[31m-using System.Windows.Media;[m
[31m-[m
[31m-namespace gameCenter.Projects._2048game.Models[m
[31m-{[m
[31m-    internal class TileModel[m
[31m-    {[m
[31m-        public int Value {  get; set; }[m
[31m-        [m
[31m-        public TextBlock tileText { get; set; }[m
[31m-[m
[31m-        public TranslateTransform TranslateTransform { get; set; }[m
[31m-[m
[31m-        public TileModel(int val) [m
[31m-        {[m
[31m-            Value = val;[m
[31m-[m
[31m-            tileText = tileText = new TextBlock[m
[31m-            {[m
[31m-                Text = Value.ToString(),[m
[31m-                HorizontalAlignment = HorizontalAlignment.Center,[m
[31m-                VerticalAlignment = VerticalAlignment.Center,[m
[31m-                TextAlignment = TextAlignment.Center,[m
[31m-                FontWeight = FontWeights.Bold,[m
[31m-                FontSize = 16,[m
[31m-                Width = 100,[m
[31m-                Height = 100,[m
[31m-            };[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/CurrencyConverter/CurrencyConverterView.xaml b/gameCenter/Projects/CurrencyConverter/CurrencyConverterView.xaml[m
[1mdeleted file mode 100644[m
[1mindex 63eb062..0000000[m
[1m--- a/gameCenter/Projects/CurrencyConverter/CurrencyConverterView.xaml[m
[1m+++ /dev/null[m
[36m@@ -1,73 +0,0 @@[m
[31m-﻿<Window x:Class="gameCenter.Projects.CurrencyConverter.CurrencyConverterView"[m
[31m-        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m
[31m-        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"[m
[31m-        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"[m
[31m-        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"[m
[31m-        xmlns:local="clr-namespace:gameCenter.Projects.CurrencyConverter"[m
[31m-        mc:Ignorable="d"[m
[31m-        Title="CurrencyConverterView" Height="450" Width="800">[m
[31m-    <Grid>[m
[31m-        <Grid.ColumnDefinitions>[m
[31m-            <ColumnDefinition Width="0.15*"/>[m
[31m-            <ColumnDefinition Width="1*"/>[m
[31m-            <ColumnDefinition Width="0.15*"/>[m
[31m-        </Grid.ColumnDefinitions>[m
[31m-        <Grid.RowDefinitions>[m
[31m-            <RowDefinition Height="0.35*"/>[m
[31m-            <RowDefinition Height="1*"/>[m
[31m-        </Grid.RowDefinitions>[m
[31m-        <Grid.Background>[m
[31m-            <ImageBrush ImageSource="/Images/backGround.jpg" Opacity="0.2"/>[m
[31m-        </Grid.Background>[m
[31m-[m
[31m-        <Border Grid.ColumnSpan="3" Background="AliceBlue">[m
[31m-            <Label[m
[31m-                x:Name="MainTitle"[m
[31m-                Content="Currency Convertion"[m
[31m-                HorizontalAlignment="Center"[m
[31m-                Grid.Column = "1"[m
[31m-                FontWeight="Black"[m
[31m-                FontSize="30"/>[m
[31m-        </Border>[m
[31m-[m
[31m-        <Grid[m
[31m-            Grid.Row="1"[m
[31m-            Margin="92,39,0,0"[m
[31m-            HorizontalAlignment="Left"[m
[31m-            VerticalAlignment="Top" Grid.ColumnSpan="2" Height="255" Width="346">[m
[31m-[m
[31m-            <Label Content="Enter an amount to convert" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,21,0,0"/>[m
[31m-            <Label Content="Amount:" Margin="10,47,0,-37" VerticalAlignment="Top" HorizontalAlignment="Left"/>[m
[31m-[m
[31m-            <TextBox Name="AmountTextBox" Width="150" Height="30" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,65,0,0"/>[m
[31m-[m
[31m-            <Label Content="Choose the curreny you wish to convert from" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,114,0,0"/>[m
[31m-            <Label Content="From Currency:" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,140,0,0"/>[m
[31m-[m
[31m-            <ComboBox Name="FromCurrencyComboBox" Width="150" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,158,0,0"/>[m
[31m-[m
[31m-            <Label Content="Choose the curreny you wish to convert to" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,189,0,0"/>[m
[31m-            <Label Content="To Currency:" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,215,0,0"/>[m
[31m-[m
[31m-            <ComboBox Name="ToCurrencyComboBox" Width="150" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,233,0,0"/>[m
[31m-[m
[31m-            <Button Name="btnConvert" Width="100" Height="30" Content="Convert"[m
[31m-             Click="btnConvert_Click" Background="LightYellow" Margin="0,65,60,0"[m
[31m-            HorizontalAlignment="Right" VerticalAlignment="Top"/>[m
[31m-[m
[31m-        </Grid>[m
[31m-[m
[31m-        <Border[m
[31m-            Background="AliceBlue"[m
[31m-            Grid.Column="1"[m
[31m-            Grid.Row="1" Margin="390,55,10,117"[m
[31m-            BorderBrush="DarkSlateGray"[m
[31m-            BorderThickness="5"[m
[31m-            >[m
[31m-            <TextBlock Name="txtResult" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,54,0,0" [m
[31m-             FontWeight="Bold"[m
[31m-             TextAlignment="Center"/>[m
[31m-        </Border>[m
[31m-[m
[31m-    </Grid>[m
[31m-</Window>[m
[1mdiff --git a/gameCenter/Projects/CurrencyConverter/CurrencyConverterView.xaml.cs b/gameCenter/Projects/CurrencyConverter/CurrencyConverterView.xaml.cs[m
[1mdeleted file mode 100644[m
[1mindex 79c8bef..0000000[m
[1m--- a/gameCenter/Projects/CurrencyConverter/CurrencyConverterView.xaml.cs[m
[1m+++ /dev/null[m
[36m@@ -1,82 +0,0 @@[m
[31m-﻿using gameCenter.Projects.CurrencyConverter.Services;[m
[31m-using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows;[m
[31m-using System.Windows.Controls;[m
[31m-using System.Windows.Data;[m
[31m-using System.Windows.Documents;[m
[31m-using System.Windows.Input;[m
[31m-using System.Windows.Media;[m
[31m-using System.Windows.Media.Imaging;[m
[31m-using System.Windows.Shapes;[m
[31m-[m
[31m-namespace gameCenter.Projects.CurrencyConverter[m
[31m-{[m
[31m-    /// <summary>[m
[31m-    /// Interaction logic for CurrencyConverterView.xaml[m
[31m-    /// </summary>[m
[31m-    public partial class CurrencyConverterView : Window[m
[31m-[m
[31m-    {[m
[31m-        private CurrencyService _currencyService;[m
[31m-        private Dictionary<string, double> _exchangeRates;[m
[31m-[m
[31m-        public CurrencyConverterView()[m
[31m-        {[m
[31m-            InitializeComponent();[m
[31m-            _currencyService = new CurrencyService();[m
[31m-            LoadCurrencies();[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        private async void LoadCurrencies()[m
[31m-        {[m
[31m-            try[m
[31m-            {[m
[31m-                _exchangeRates = await _currencyService.GetExchangeRatesAsync();[m
[31m-                string[] currencyNames = _exchangeRates.Keys.ToArray();[m
[31m-                FromCurrencyComboBox.ItemsSource = currencyNames;[m
[31m-                ToCurrencyComboBox.ItemsSource = currencyNames;[m
[31m-            }[m
[31m-            catch (Exception e)[m
[31m-            {[m
[31m-                MessageBox.Show($"Error loading currencies: {e.Message}");[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        private void btnConvert_Click(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-[m
[31m-            string fromCurrency = FromCurrencyComboBox.SelectedItem?.ToString();[m
[31m-            string toCurrency = ToCurrencyComboBox.SelectedItem?.ToString();[m
[31m-            double amount;[m
[31m-[m
[31m-            if (!string.IsNullOrWhiteSpace(AmountTextBox.Text))[m
[31m-            {[m
[31m-                amount = double.Parse(AmountTextBox.Text);[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                MessageBox.Show("Please enter a valid exchange rate!");[m
[31m-                return;[m
[31m-            }[m
[31m-[m
[31m-            if (fromCurrency == null || toCurrency == null || amount <= 0)[m
[31m-            {[m
[31m-                MessageBox.Show("Please make sure that you've entered a positive number for \nthe convertion rate and currencies are selected!");[m
[31m-                return;[m
[31m-            }[m
[31m-[m
[31m-            double baseToFromRate = _exchangeRates[fromCurrency];[m
[31m-            double baseToToRate = _exchangeRates[toCurrency];[m
[31m-[m
[31m-            double convertedAmount = (baseToToRate / baseToFromRate) * amount;[m
[31m-[m
[31m-            txtResult.Text = $"Converted amount: \n {amount} {fromCurrency} \n to \n {convertedAmount.ToString()} {toCurrency} ";[m
[31m-        }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/CurrencyConverter/Models/ExchangeResponse.cs b/gameCenter/Projects/CurrencyConverter/Models/ExchangeResponse.cs[m
[1mdeleted file mode 100644[m
[1mindex 3852ddb..0000000[m
[1m--- a/gameCenter/Projects/CurrencyConverter/Models/ExchangeResponse.cs[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace gameCenter.Projects.CurrencyConverter.Models[m
[31m-{[m
[31m-    internal class ExchangeResponse[m
[31m-    {[m
[31m-        public bool Success { get; set; }[m
[31m-        public long Timestamp { get; set; }[m
[31m-        public string Base { get; set; }[m
[31m-        public string Date { get; set; }[m
[31m-        public Dictionary<string, double> Rates { get; set; }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/CurrencyConverter/Services/CurrencyService.cs b/gameCenter/Projects/CurrencyConverter/Services/CurrencyService.cs[m
[1mdeleted file mode 100644[m
[1mindex 8c55196..0000000[m
[1m--- a/gameCenter/Projects/CurrencyConverter/Services/CurrencyService.cs[m
[1m+++ /dev/null[m
[36m@@ -1,47 +0,0 @@[m
[31m-﻿using gameCenter.Projects.CurrencyConverter.Models;[m
[31m-using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Net.Http;[m
[31m-using System.Text;[m
[31m-using System.Text.Json;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace gameCenter.Projects.CurrencyConverter.Services[m
[31m-{[m
[31m-    internal class CurrencyService[m
[31m-    {[m
[31m-        private const string BaseApiEndPoint = "http://api.exchangeratesapi.io/latest";[m
[31m-[m
[31m-        private const string ApiKey = "620f03531b3007552225473b2bb6aa69";[m
[31m-[m
[31m-        private HttpClient Http_Client = new HttpClient();[m
[31m-[m
[31m-        public async Task<Dictionary<string, double>> GetExchangeRatesAsync()[m
[31m-[m
[31m-        {[m
[31m-[m
[31m-            string requestUrl = $"{BaseApiEndPoint}?access_key={ApiKey}";[m
[31m-[m
[31m-            string response = await Http_Client.GetStringAsync(requestUrl);[m
[31m-[m
[31m-            JsonSerializerOptions options = new JsonSerializerOptions[m
[31m-[m
[31m-            {[m
[31m-[m
[31m-                PropertyNameCaseInsensitive = true,[m
[31m-[m
[31m-            };[m
[31m-[m
[31m-            ExchangeResponse exchangeData = JsonSerializer.Deserialize<ExchangeResponse>(response, options);[m
[31m-[m
[31m-            if (exchangeData == null || exchangeData.Rates == null)[m
[31m-[m
[31m-                throw new InvalidOperationException("Failed to fetch exchange rates.");[m
[31m-[m
[31m-[m
[31m-            return exchangeData.Rates;[m
[31m-[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/SimonSays/Assets/Sounds/Ding1.wav b/gameCenter/Projects/SimonSays/Assets/Sounds/Ding1.wav[m
[1mdeleted file mode 100644[m
[1mindex bf9bfe7..0000000[m
Binary files a/gameCenter/Projects/SimonSays/Assets/Sounds/Ding1.wav and /dev/null differ
[1mdiff --git a/gameCenter/Projects/SimonSays/Assets/Sounds/Ding2.wav b/gameCenter/Projects/SimonSays/Assets/Sounds/Ding2.wav[m
[1mdeleted file mode 100644[m
[1mindex 7a0c70d..0000000[m
Binary files a/gameCenter/Projects/SimonSays/Assets/Sounds/Ding2.wav and /dev/null differ
[1mdiff --git a/gameCenter/Projects/SimonSays/Assets/Sounds/Ding3.wav b/gameCenter/Projects/SimonSays/Assets/Sounds/Ding3.wav[m
[1mdeleted file mode 100644[m
[1mindex bf70de7..0000000[m
Binary files a/gameCenter/Projects/SimonSays/Assets/Sounds/Ding3.wav and /dev/null differ
[1mdiff --git a/gameCenter/Projects/SimonSays/Assets/Sounds/Ding4.wav b/gameCenter/Projects/SimonSays/Assets/Sounds/Ding4.wav[m
[1mdeleted file mode 100644[m
[1mindex 2628cf9..0000000[m
Binary files a/gameCenter/Projects/SimonSays/Assets/Sounds/Ding4.wav and /dev/null differ
[1mdiff --git a/gameCenter/Projects/SimonSays/Assets/Sounds/WrongBuzz.wav b/gameCenter/Projects/SimonSays/Assets/Sounds/WrongBuzz.wav[m
[1mdeleted file mode 100644[m
[1mindex c8e8cd1..0000000[m
Binary files a/gameCenter/Projects/SimonSays/Assets/Sounds/WrongBuzz.wav and /dev/null differ
[1mdiff --git a/gameCenter/Projects/SimonSays/Models/ColorList.cs b/gameCenter/Projects/SimonSays/Models/ColorList.cs[m
[1mdeleted file mode 100644[m
[1mindex f5a321a..0000000[m
[1m--- a/gameCenter/Projects/SimonSays/Models/ColorList.cs[m
[1m+++ /dev/null[m
[36m@@ -1,25 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows.Media;[m
[31m-[m
[31m-namespace gameCenter.Projects.SimonSays.Models[m
[31m-{[m
[31m-    internal class ColorList[m
[31m-    {[m
[31m-        public List<SimonModel> colorList = new List<SimonModel>();[m
[31m-[m
[31m-        public SimonModel Red = new("Red", Colors.Red);[m
[31m-        public SimonModel Green = new("Green", Colors.Green);[m
[31m-        public SimonModel Yellow = new("Yellow", Colors.Yellow);[m
[31m-        public SimonModel Blue = new("Blue", Colors.Blue);[m
[31m-[m
[31m-[m
[31m-        public ColorList()[m
[31m-        {[m
[31m-            colorList.Add(Red); colorList.Add(Green); colorList.Add(Yellow); colorList.Add(Blue);[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/SimonSays/Models/SimonGame.cs b/gameCenter/Projects/SimonSays/Models/SimonGame.cs[m
[1mdeleted file mode 100644[m
[1mindex f0ea8d2..0000000[m
[1m--- a/gameCenter/Projects/SimonSays/Models/SimonGame.cs[m
[1m+++ /dev/null[m
[36m@@ -1,36 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows.Media;[m
[31m-[m
[31m-namespace gameCenter.Projects.SimonSays.Models[m
[31m-{[m
[31m-    internal class SimonGame[m
[31m-    {[m
[31m-        public List<SimonModel> gameSequence { get; set; }[m
[31m-[m
[31m-        public List<string> playerSequence { get; set; }[m
[31m-        public int score { get; set; }[m
[31m-[m
[31m-        public ColorList simonColors = new();[m
[31m-        [m
[31m-        public Random random = new Random();[m
[31m-[m
[31m-        public void AddColorToSequence() [m
[31m-        {[m
[31m-            int rand = random.Next(0, 4);[m
[31m-            SimonModel colorToAdd = simonColors.colorList[rand];[m
[31m-            gameSequence.Add(colorToAdd);[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-        public SimonGame()[m
[31m-        {[m
[31m-            playerSequence = new List<string>();[m
[31m-            gameSequence = new List<SimonModel>();[m
[31m-            score = 0;[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/SimonSays/Models/SimonModel.cs b/gameCenter/Projects/SimonSays/Models/SimonModel.cs[m
[1mdeleted file mode 100644[m
[1mindex 930c5d0..0000000[m
[1m--- a/gameCenter/Projects/SimonSays/Models/SimonModel.cs[m
[1m+++ /dev/null[m
[36m@@ -1,24 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows.Controls;[m
[31m-using System.Windows.Media;[m
[31m-[m
[31m-namespace gameCenter.Projects.SimonSays.Models[m
[31m-{[m
[31m-    internal class SimonModel[m
[31m-    {[m
[31m-        public string name { get; set; }[m
[31m-        public Color color { get; set; }[m
[31m-        public double opacity { get; set; }[m
[31m-[m
[31m-        public SimonModel(string name, Color color)[m
[31m-        {[m
[31m-            this.name = name;[m
[31m-            this.color = color;[m
[31m-            opacity = 0.85;[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/SimonSays/SimonSaysView.xaml b/gameCenter/Projects/SimonSays/SimonSaysView.xaml[m
[1mdeleted file mode 100644[m
[1mindex 96a62e5..0000000[m
[1m--- a/gameCenter/Projects/SimonSays/SimonSaysView.xaml[m
[1m+++ /dev/null[m
[36m@@ -1,250 +0,0 @@[m
[31m-﻿<Window x:Class="gameCenter.Projects.SimonSays.SimonSaysView"[m
[31m-        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m
[31m-        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"[m
[31m-        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"[m
[31m-        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"[m
[31m-        xmlns:local="clr-namespace:gameCenter.Projects.SimonSays"[m
[31m-        mc:Ignorable="d"[m
[31m-        Title="SimonSaysView" Height="450" Width="800"[m
[31m-        ResizeMode="NoResize">[m
[31m-[m
[31m-    <Grid>[m
[31m-        <Grid.Background>[m
[31m-            <ImageBrush ImageSource="/Images/backGround.jpg" Opacity="0.2"/>[m
[31m-        </Grid.Background>[m
[31m-        <Grid[m
[31m-        x:Name="GameGrid"[m
[31m-            Visibility="Collapsed">[m
[31m-            <Grid.ColumnDefinitions>[m
[31m-                <ColumnDefinition Width="0.25*"></ColumnDefinition>[m
[31m-                <ColumnDefinition Width="4*"></ColumnDefinition>[m
[31m-                <ColumnDefinition Width="0.25*"></ColumnDefinition>[m
[31m-            </Grid.ColumnDefinitions>[m
[31m-            <Grid.RowDefinitions>[m
[31m-                <RowDefinition Height="0.5*"></RowDefinition>[m
[31m-                <RowDefinition Height="0.5*"></RowDefinition>[m
[31m-                <RowDefinition Height="2*"></RowDefinition>[m
[31m-                <RowDefinition Height="0.5*"></RowDefinition>[m
[31m-            </Grid.RowDefinitions>[m
[31m-[m
[31m-            <Label[m
[31m-            Content="Current score : "[m
[31m-            x:Name="ScoreLabel" Grid.Column="1" VerticalAlignment="Center"[m
[31m-            HorizontalAlignment="Left" Grid.Row="1" Margin="288,0,0,0"[m
[31m-            FontWeight="DemiBold"/>[m
[31m-[m
[31m-            <Label[m
[31m-            Content="0"[m
[31m-            HorizontalContentAlignment="Center"[m
[31m-            VerticalContentAlignment="Center"[m
[31m-            Background="AntiqueWhite"[m
[31m-            BorderBrush="Black"[m
[31m-            BorderThickness="1"[m
[31m-            x:Name="ScoreDisplay" Grid.Column="1" VerticalAlignment="Center"[m
[31m-            HorizontalAlignment="Left" Grid.Row="1" Margin="385,0,0,0" Height="30" Width="50"[m
[31m-            FontWeight="DemiBold"/>[m
[31m-[m
[31m-            <Button[m
[31m-                Content="Back"[m
[31m-                x:Name="BackBtn" Click="BackBtn_Click"[m
[31m-                Height="40"[m
[31m-                Width="60"[m
[31m-                VerticalAlignment="Center"[m
[31m-                HorizontalAlignment="Left"[m
[31m-                Grid.Row="1"[m
[31m-                Grid.Column="1"[m
[31m-                Margin="5"[m
[31m-                Background="LightYellow"/>[m
[31m-[m
[31m-            <WrapPanel[m
[31m-            Grid.Row="2"[m
[31m-            Grid.Column="1"[m
[31m-            Margin="5"[m
[31m-            VerticalAlignment="Center"[m
[31m-            HorizontalAlignment="Center"[m
[31m-            >[m
[31m-[m
[31m-                <Button[m
[31m-            Width="100"[m
[31m-            Opacity="0.85"[m
[31m-            Height="100"[m
[31m-            x:Name="Red"[m
[31m-            Background="Red"[m
[31m-            Margin="20" Click="HandleColorClick"/>[m
[31m-                <Button[m
[31m-            Width="100"[m
[31m-            Opacity="0.85"    [m
[31m-            Height="100"[m
[31m-            x:Name="Yellow"[m
[31m-            Background="Yellow"[m
[31m-                Margin="20" Click="HandleColorClick"/>[m
[31m-                <Button[m
[31m-            Width="100"[m
[31m-            Opacity="0.85"[m
[31m-            Height="100"[m
[31m-            x:Name="Green"[m
[31m-            Background="Green"[m
[31m-                Margin="20" Click="HandleColorClick"/>[m
[31m-                <Button[m
[31m-            Width="100"[m
[31m-            Opacity="0.85"[m
[31m-            Height="100"[m
[31m-            x:Name="Blue"[m
[31m-            Background="Blue"[m
[31m-            Margin="20" Click="HandleColorClick"/>[m
[31m-[m
[31m-[m
[31m-            </WrapPanel>[m
[31m-            <Button[m
[31m-                Content="Start Game"[m
[31m-                x:Name="StartButton" Click="StartButton_Click"[m
[31m-                Height="40"[m
[31m-                Width="100"[m
[31m-                VerticalAlignment="Center"[m
[31m-                HorizontalAlignment="Left"[m
[31m-                Grid.Row="3"[m
[31m-                Grid.Column="1"[m
[31m-                Margin="356,0,0,0"[m
[31m-                Background="LightYellow"/>[m
[31m-[m
[31m-            <StackPanel Margin="235,11,377,9" Grid.Row="3" Grid.Column="1" Width="100" Background="LightYellow">[m
[31m-                <TextBlock Text="Select Difficulty:"/>[m
[31m-                <ComboBox x:Name="DifficultyComboBox" Width="150" Margin="0,5" SelectionChanged="DifficultyComboBox_SelectionChanged">[m
[31m-                    <ComboBoxItem Content="Easy" Background="LightGreen"/>[m
[31m-                    <ComboBoxItem Content="Medium" Background="Yellow"/>[m
[31m-                    <ComboBoxItem Content="Hard" Background="Red"/>[m
[31m-                </ComboBox>[m
[31m-            </StackPanel>[m
[31m-[m
[31m-        </Grid>[m
[31m-[m
[31m-        <Grid[m
[31m-            x:Name="StartGrid"[m
[31m-            Background="Azure"[m
[31m-            Height="330"[m
[31m-            Width="350"[m
[31m-            Visibility="Visible"[m
[31m-            [m
[31m-            >[m
[31m-            <Grid.RowDefinitions>[m
[31m-                <RowDefinition Height="0.7*"></RowDefinition>[m
[31m-                <RowDefinition Height="0.3*"></RowDefinition>[m
[31m-                <RowDefinition Height="2*"></RowDefinition>[m
[31m-                <RowDefinition Height="0.5*"></RowDefinition>[m
[31m-            </Grid.RowDefinitions>[m
[31m-            <Button[m
[31m-                Content="New Game"[m
[31m-                x:Name="NewGame" Click="NewGame_Click"[m
[31m-                Height="40"[m
[31m-                Width="100"[m
[31m-                VerticalAlignment="Center"[m
[31m-                HorizontalAlignment="Center"[m
[31m-                Grid.Row="3"[m
[31m-                Margin="3"[m
[31m-                Background="LightYellow"/>[m
[31m-            <Label[m
[31m-                x:Name="MainTitle"[m
[31m-                Content="Simon Says"[m
[31m-                HorizontalAlignment="Center"[m
[31m-                FontWeight="Black"[m
[31m-                FontSize="30"/>[m
[31m-            <Label[m
[31m-                x:Name="TopScores"[m
[31m-                Content="Top scores : "[m
[31m-                HorizontalAlignment="Center"[m
[31m-                FontWeight="SemiBold"[m
[31m-                FontSize="12"[m
[31m-                Grid.Row="1"/>[m
[31m-            <ListBox[m
[31m-                Grid.Row="2"[m
[31m-                Margin="10"[m
[31m-                Width="280"[m
[31m-                x:Name="ScoreBoardList">[m
[31m-            </ListBox>[m
[31m-        </Grid>[m
[31m-[m
[31m-        <Grid[m
[31m-            x:Name="GameOverGrid"[m
[31m-            Background="Azure"[m
[31m-            Margin="30"[m
[31m-            Width="350"[m
[31m-            Visibility="Collapsed"[m
[31m-            [m
[31m-            >[m
[31m-            <Grid.RowDefinitions>[m
[31m-                <RowDefinition Height="0.7*"></RowDefinition>[m
[31m-                <RowDefinition Height="1.5*"></RowDefinition>[m
[31m-                <RowDefinition Height="1.5*"></RowDefinition>[m
[31m-                <RowDefinition Height="0.7*"></RowDefinition>[m
[31m-            </Grid.RowDefinitions>[m
[31m-            <Button[m
[31m-                Content="New Game"[m
[31m-                x:Name="NewGame2" Click="NewGame_Click"[m
[31m-                Height="40"[m
[31m-                Width="100"[m
[31m-                VerticalAlignment="Center"[m
[31m-                HorizontalAlignment="Center"[m
[31m-                Grid.Row="4[m
[31m-                "[m
[31m-                Margin="3"[m
[31m-                Background="LightYellow"/>[m
[31m-            <Label[m
[31m-                x:Name="GameOverLabel"[m
[31m-                Content="Game Over"[m
[31m-                HorizontalAlignment="Center"[m
[31m-                FontWeight="Black"[m
[31m-                FontSize="30"/>[m
[31m-[m
[31m-            <WrapPanel[m
[31m-                Grid.Row="1"[m
[31m-                HorizontalAlignment="Center"[m
[31m-                VerticalAlignment="Center"[m
[31m-                >[m
[31m-                <Label[m
[31m-                x:Name="PlayerFinalScoreLabel"[m
[31m-                Content="Your score : "[m
[31m-                FontWeight="SemiBold"[m
[31m-                FontSize="12"/>[m
[31m-[m
[31m-                <Label[m
[31m-                Content="0"[m
[31m-                HorizontalContentAlignment="Center"[m
[31m-                VerticalContentAlignment="Center"[m
[31m-                HorizontalAlignment="Center"[m
[31m-                VerticalAlignment="Center"[m
[31m-                Background="AntiqueWhite"[m
[31m-                BorderBrush="Black"[m
[31m-                BorderThickness="1"[m
[31m-                x:Name="FinalScoreDisplay" Height="30" Width="30"[m
[31m-                FontWeight="DemiBold" Grid.Row="1"/>[m
[31m-            </WrapPanel>[m
[31m-[m
[31m-            <WrapPanel[m
[31m-                Grid.Row="2"[m
[31m-                HorizontalAlignment="Center"[m
[31m-                VerticalAlignment="Center"[m
[31m-                >[m
[31m-                <Label[m
[31m-                 x:Name="EnterYourNameGameOver"[m
[31m-                 Content="Enter your nickname: "[m
[31m-                    />[m
[31m-                <TextBox[m
[31m-                    Width="100"[m
[31m-                    x:Name="PlayerNameInput"[m
[31m-                    TextAlignment="Center"/>[m
[31m-[m
[31m-                <Button[m
[31m-                    x:Name="ScoreSubmitBtn"[m
[31m-                    Content="Submit score"[m
[31m-                    Height="20"[m
[31m-                    Width="75"[m
[31m-                    Margin="5"[m
[31m-                    Background="LightYellow"[m
[31m-                    Click="SubmitBtnOnclick"[m
[31m-                    />[m
[31m-            </WrapPanel>[m
[31m-[m
[31m-        </Grid>[m
[31m-    </Grid>[m
[31m-[m
[31m-</Window>[m
[1mdiff --git a/gameCenter/Projects/SimonSays/SimonSaysView.xaml.cs b/gameCenter/Projects/SimonSays/SimonSaysView.xaml.cs[m
[1mdeleted file mode 100644[m
[1mindex 414afb3..0000000[m
[1m--- a/gameCenter/Projects/SimonSays/SimonSaysView.xaml.cs[m
[1m+++ /dev/null[m
[36m@@ -1,323 +0,0 @@[m
[31m-﻿using gameCenter.Projects.SimonSays.Models;[m
[31m-using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.IO;[m
[31m-using System.Linq;[m
[31m-using System.Media;[m
[31m-using System.Reflection.Metadata;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows;[m
[31m-using System.Windows.Controls;[m
[31m-using System.Windows.Data;[m
[31m-using System.Windows.Documents;[m
[31m-using System.Windows.Input;[m
[31m-using System.Windows.Media;[m
[31m-using System.Windows.Media.Imaging;[m
[31m-using System.Windows.Shapes;[m
[31m-using Path = System.IO.Path;[m
[31m-[m
[31m-namespace gameCenter.Projects.SimonSays[m
[31m-{[m
[31m-    /// <summary>[m
[31m-    /// Interaction logic for SimonSaysView.xaml[m
[31m-    /// </summary>[m
[31m-    public partial class SimonSaysView : Window[m
[31m-    {[m
[31m-        SimonGame game = new();[m
[31m-[m
[31m-        bool gameOver = false;[m
[31m-[m
[31m-        bool playerHasFinishedMove = true;[m
[31m-[m
[31m-        public enum Difficulty[m
[31m-        {[m
[31m-            Easy = 1100,[m
[31m-            Medium = 800,[m
[31m-            Hard = 450[m
[31m-        }[m
[31m-[m
[31m-        public Difficulty difficulty;[m
[31m-[m
[31m-        static string currentDirectory = AppDomain.CurrentDomain.BaseDirectory;[m
[31m-        static string soundsFolderDir = GetSoundsFolderPath();[m
[31m-[m
[31m-[m
[31m-        public SimonSaysView()[m
[31m-        {[m
[31m-            InitializeComponent();[m
[31m-            LoadScores();[m
[31m-            [m
[31m-        }[m
[31m-        static string GetSoundsFolderPath()[m
[31m-        {[m
[31m-            string currentDirectory = AppDomain.CurrentDomain.BaseDirectory;[m
[31m-[m
[31m-            if (currentDirectory.EndsWith("bin\\Debug\\") || currentDirectory.EndsWith("bin\\Release\\"))[m
[31m-            {[m
[31m-                return Path.Combine(currentDirectory, "..", "..", "..", "Projects", "SimonSays", "Assets", "Sounds");[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                return Path.Combine(currentDirectory, "Projects", "SimonSays", "Assets", "Sounds");[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        private void mainGameLoop()[m
[31m-        {[m
[31m-[m
[31m-            if (!gameOver)[m
[31m-            {[m
[31m-                if (playerHasFinishedMove)[m
[31m-                {[m
[31m-                    game.playerSequence = new List<string>();[m
[31m-                    playerHasFinishedMove = false;[m
[31m-                    game.AddColorToSequence();[m
[31m-                    DisplaySequence();[m
[31m-                }[m
[31m-            }[m
[31m-            else  if (gameOver)[m
[31m-            {[m
[31m-                StartButton.IsEnabled = true;[m
[31m-                DifficultyComboBox.IsEnabled = true;[m
[31m-                GameGrid.Visibility = Visibility.Collapsed;[m
[31m-                GameOverGrid.Visibility = Visibility.Visible;[m
[31m-                FinalScoreDisplay.Content = game.score.ToString();[m
[31m-                ScoreDisplay.Content = "0";[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-        private void StartButton_Click(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            game = new SimonGame();[m
[31m-            StartButton.IsEnabled = false;[m
[31m-            DifficultyComboBox.IsEnabled = false;[m
[31m-            gameOver = false;[m
[31m-            playerHasFinishedMove = true;[m
[31m-            mainGameLoop();[m
[31m-        }[m
[31m-[m
[31m-        private void HandleColorClick(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            Button? thisButton = sender as Button;[m
[31m-            string clickedColor = thisButton.Name;[m
[31m-            game.playerSequence.Add(clickedColor);[m
[31m-            CompareSequence(clickedColor);[m
[31m-        }[m
[31m-[m
[31m-        private void CompareSequence(string playerMove)[m
[31m-        {[m
[31m-            int currentMove = game.playerSequence.Count;[m
[31m-            string gameMove = game.gameSequence[currentMove - 1].name;[m
[31m-[m
[31m-            if (gameMove != playerMove)[m
[31m-            {[m
[31m-                PlaySound("WrongBuzz.WAV");[m
[31m-                gameOver = true;[m
[31m-            }[m
[31m-            if (currentMove == game.gameSequence.Count && gameMove == playerMove)[m
[31m-            {[m
[31m-                playerHasFinishedMove = true;[m
[31m-                switch (difficulty)[m
[31m-                {[m
[31m-                    case Difficulty.Easy:[m
[31m-                        game.score += 3; break;[m
[31m-                    case Difficulty.Medium:[m
[31m-                        game.score += 4; break;[m
[31m-                    case Difficulty.Hard:[m
[31m-                        game.score += 5; break;[m
[31m-                }[m
[31m-                ScoreDisplay.Content = game.score.ToString();[m
[31m-            }[m
[31m-            mainGameLoop();[m
[31m-        }[m
[31m-[m
[31m-        private async void DisplaySequence()[m
[31m-        {[m
[31m-            Green.IsEnabled = false;[m
[31m-            Red.IsEnabled = false;[m
[31m-            Yellow.IsEnabled = false;[m
[31m-            Blue.IsEnabled = false;[m
[31m-[m
[31m-            Green.IsHitTestVisible = false;[m
[31m-            Red.IsHitTestVisible = false;[m
[31m-            Yellow.IsHitTestVisible = false;[m
[31m-            Blue.IsHitTestVisible = false;[m
[31m-[m
[31m-            await Task.Delay((int)difficulty/2);[m
[31m-[m
[31m-            foreach (SimonModel simonColor in game.gameSequence)[m
[31m-            {[m
[31m-                if (simonColor.name == "Red")[m
[31m-                {[m
[31m-                    PlaySound("Ding1.WAV");[m
[31m-                    HighLightUnhighlightColor(Red);[m
[31m-                }[m
[31m-                else if (simonColor.name == "Green")[m
[31m-                {[m
[31m-                    PlaySound("Ding2.WAV");[m
[31m-                    HighLightUnhighlightColor(Green);[m
[31m-                }[m
[31m-                else if (simonColor.name == "Yellow")[m
[31m-                {[m
[31m-                    PlaySound("Ding3.WAV");[m
[31m-                    HighLightUnhighlightColor(Yellow);[m
[31m-                }[m
[31m-                else if (simonColor.name == "Blue")[m
[31m-                {[m
[31m-;                   PlaySound("Ding4.WAV");[m
[31m-                    HighLightUnhighlightColor(Blue);[m
[31m-                }[m
[31m-                await Task.Delay((int)difficulty);[m
[31m-            }[m
[31m-[m
[31m-            Green.IsEnabled = true;[m
[31m-            Red.IsEnabled = true;[m
[31m-            Yellow.IsEnabled = true;[m
[31m-            Blue.IsEnabled = true;[m
[31m-[m
[31m-            Green.IsHitTestVisible = true;[m
[31m-            Red.IsHitTestVisible = true;[m
[31m-            Yellow.IsHitTestVisible = true;[m
[31m-            Blue.IsHitTestVisible = true;[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        private void PlaySound(string soundFileName)[m
[31m-        {[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                SoundPlayer soundPlayer = new SoundPlayer(Path.Combine(soundsFolderDir,soundFileName));[m
[31m-                soundPlayer.Play();[m
[31m-            }[m
[31m-            catch (Exception ex)[m
[31m-            {[m
[31m-                MessageBox.Show($"Error playing sound: {ex.Message}");[m
[31m-            }[m
[31m-        }[m
[31m-        private async void HighLightUnhighlightColor(Button btn)[m
[31m-        {[m
[31m-            btn.IsEnabled = true;[m
[31m-            await Task.Delay((int)difficulty / 2);[m
[31m-            btn.IsEnabled = false;[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        private void NewGame_Click(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            StartGrid.Visibility = Visibility.Collapsed;[m
[31m-            GameOverGrid.Visibility = Visibility.Collapsed;[m
[31m-            GameGrid.Visibility = Visibility.Visible;[m
[31m-            DifficultyComboBox.SelectedItem = DifficultyComboBox.Items[1];[m
[31m-            DifficultyComboBox.IsEnabled = true;[m
[31m-            ScoreSubmitBtn.IsEnabled = true;[m
[31m-[m
[31m-[m
[31m-            Green.IsHitTestVisible = false;[m
[31m-            Red.IsHitTestVisible = false;[m
[31m-            Yellow.IsHitTestVisible = false;[m
[31m-            Blue.IsHitTestVisible = false;[m
[31m-        }[m
[31m-[m
[31m-        private void SubmitBtnOnclick(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            string playerName = PlayerNameInput.Text;[m
[31m-            string score = game.score.ToString();[m
[31m-            string filePath = Path.Combine(AppContext.BaseDirectory, "simonScores.txt");[m
[31m-[m
[31m-            if (!string.IsNullOrEmpty(playerName))[m
[31m-            {[m
[31m-                using (StreamWriter streamWriter = new StreamWriter(filePath,true))[m
[31m-                {[m
[31m-                    streamWriter.WriteLine($"{playerName} : {score} : Difficulty - {difficulty}");[m
[31m-                }[m
[31m-                ScoreSubmitBtn.IsEnabled = false;[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                MessageBox.Show("Please enter a name");[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        private void LoadScores()[m
[31m-        {[m
[31m-            ScoreBoardList.Items.Clear();[m
[31m-            string filePath = Path.Combine(System.AppContext.BaseDirectory, "simonScores.txt");[m
[31m-[m
[31m-            if (!File.Exists(filePath))[m
[31m-            {[m
[31m-                using (File.Create(filePath))[m
[31m-                {[m
[31m-[m
[31m-                };[m
[31m-            }[m
[31m-            try[m
[31m-            {[m
[31m-                List<string> scores = new List<string>();[m
[31m-[m
[31m-                using (StreamReader reader = new StreamReader(filePath))[m
[31m-                {[m
[31m-                    string line;[m
[31m-                    while ((line = reader.ReadLine()) != null)[m
[31m-                    {[m
[31m-                        scores.Add(line);[m
[31m-                    }[m
[31m-                }[m
[31m-[m
[31m-                scores.Sort((a, b) =>[m
[31m-                {[m
[31m-                    int scoreA = int.Parse(a.Split(':')[1].Trim());[m
[31m-                    int scoreB = int.Parse(b.Split(':')[1].Trim());[m
[31m-                    return scoreB.CompareTo(scoreA);[m
[31m-                });[m
[31m-[m
[31m-[m
[31m-                foreach (string score in scores)[m
[31m-                {[m
[31m-                    ScoreBoardList.Items.Add(score);[m
[31m-                }[m
[31m-            }[m
[31m-            catch (FileNotFoundException)[m
[31m-            {[m
[31m-                MessageBox.Show("Scores file not found.");[m
[31m-            }[m
[31m-            catch (Exception ex)[m
[31m-            {[m
[31m-                MessageBox.Show($"An error occurred: {ex.Message}");[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-        private void BackBtn_Click(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            LoadScores();[m
[31m-            ScoreDisplay.Content = "0";[m
[31m-            game = new SimonGame();[m
[31m-            StartButton.IsEnabled = true;[m
[31m-[m
[31m-            GameGrid.Visibility = Visibility.Collapsed;[m
[31m-            StartGrid.Visibility = Visibility.Visible;[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-        private void DifficultyComboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)[m
[31m-        {[m
[31m-            SetGameDifficulty();[m
[31m-        }[m
[31m-[m
[31m-        private void SetGameDifficulty()[m
[31m-        {[m
[31m-            if (DifficultyComboBox.SelectedItem is ComboBoxItem selectedComboBoxItem)[m
[31m-            {[m
[31m-                if (Enum.TryParse(selectedComboBoxItem.Content.ToString(), out Difficulty selectedDifficulty))[m
[31m-                {[m
[31m-                    int numericValue = (int)selectedDifficulty;[m
[31m-                    difficulty = selectedDifficulty;[m
[31m-                }[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/TicTacToe/Models/TicTacToeGame.cs b/gameCenter/Projects/TicTacToe/Models/TicTacToeGame.cs[m
[1mdeleted file mode 100644[m
[1mindex a8c2220..0000000[m
[1m--- a/gameCenter/Projects/TicTacToe/Models/TicTacToeGame.cs[m
[1m+++ /dev/null[m
[36m@@ -1,59 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace gameCenter.Projects.TicTacToe.Models[m
[31m-{[m
[31m-    internal class TicTacToeGame[m
[31m-    {[m
[31m-        public char _currentPlayer { get; set; }[m
[31m-        public char[,] _gameBoard { get; set; }[m
[31m-[m
[31m-        public TicTacToeGame()[m
[31m-        {[m
[31m-            _currentPlayer = 'X';[m
[31m-            _gameBoard = new char[3, 3];[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-        public bool IsBoardFull()[m
[31m-        {[m
[31m-            for (int i = 0; i < 3; i++)[m
[31m-            {[m
[31m-                for (int j = 0; j < 3; j++)[m
[31m-                {[m
[31m-                    if (_gameBoard[i, j] == 0)[m
[31m-                    {[m
[31m-                        return false;[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-            return true;[m
[31m-        }[m
[31m-[m
[31m-        public bool CheckForWin()[m
[31m-        {[m
[31m-            for (int i = 0; i < 3; i++)[m
[31m-            {[m
[31m-                if (_gameBoard[i, 0] == _currentPlayer && _gameBoard[i, 1] == _currentPlayer && _gameBoard[i, 2] == _currentPlayer)[m
[31m-                    return true;[m
[31m-            }[m
[31m-[m
[31m-            for (int i = 0; i < 3; i++)[m
[31m-            {[m
[31m-                if (_gameBoard[0, i] == _currentPlayer && _gameBoard[1, i] == _currentPlayer && _gameBoard[2, i] == _currentPlayer)[m
[31m-                    return true;[m
[31m-            }[m
[31m-[m
[31m-            if (_gameBoard[0, 0] == _currentPlayer && _gameBoard[1, 1] == _currentPlayer && _gameBoard[2, 2] == _currentPlayer)[m
[31m-                return true;[m
[31m-[m
[31m-            if (_gameBoard[0, 2] == _currentPlayer && _gameBoard[1, 1] == _currentPlayer && _gameBoard[2, 0] == _currentPlayer)[m
[31m-                return true;[m
[31m-[m
[31m-            return false;[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/TicTacToe/TicTacToeView.xaml b/gameCenter/Projects/TicTacToe/TicTacToeView.xaml[m
[1mdeleted file mode 100644[m
[1mindex 168573f..0000000[m
[1m--- a/gameCenter/Projects/TicTacToe/TicTacToeView.xaml[m
[1m+++ /dev/null[m
[36m@@ -1,11 +0,0 @@[m
[31m-﻿<Window x:Class="gameCenter.Projects.TicTacToe.TicTacToeView"[m
[31m-        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m
[31m-        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"[m
[31m-        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"[m
[31m-        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"[m
[31m-        xmlns:local="clr-namespace:gameCenter.Projects.TicTacToe"[m
[31m-        mc:Ignorable="d"[m
[31m-        Title="TicTacToeView" Height="500" Width="500"[m
[31m-        ResizeMode="NoResize">[m
[31m-    <Grid x:Name="MainGrid">        <Grid.RowDefinitions>            <RowDefinition/>            <RowDefinition/>            <RowDefinition/>        </Grid.RowDefinitions>        <Grid.ColumnDefinitions>            <ColumnDefinition/>            <ColumnDefinition/>            <ColumnDefinition/>        </Grid.ColumnDefinitions>        <Button Grid.Row="0" Grid.Column="0" Click="Button_Click"/>        <Button Grid.Row="0" Grid.Column="1" Click="Button_Click"/>        <Button Grid.Row="0" Grid.Column="2" Click="Button_Click"/>        <Button Grid.Row="1" Grid.Column="0" Click="Button_Click"/>        <Button Grid.Row="1" Grid.Column="1" Click="Button_Click"/>        <Button Grid.Row="1" Grid.Column="2" Click="Button_Click"/>        <Button Grid.Row="2" Grid.Column="0" Click="Button_Click"/>        <Button Grid.Row="2" Grid.Column="1" Click="Button_Click"/>        <Button Grid.Row="2" Grid.Column="2" Click="Button_Click"/>    </Grid>[m
[31m-</Window>[m
[1mdiff --git a/gameCenter/Projects/TicTacToe/TicTacToeView.xaml.cs b/gameCenter/Projects/TicTacToe/TicTacToeView.xaml.cs[m
[1mdeleted file mode 100644[m
[1mindex a1a7c4f..0000000[m
[1m--- a/gameCenter/Projects/TicTacToe/TicTacToeView.xaml.cs[m
[1m+++ /dev/null[m
[36m@@ -1,74 +0,0 @@[m
[31m-﻿using gameCenter.Projects.TicTacToe.Models;[m
[31m-using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows;[m
[31m-using System.Windows.Controls;[m
[31m-using System.Windows.Data;[m
[31m-using System.Windows.Documents;[m
[31m-using System.Windows.Input;[m
[31m-using System.Windows.Media;[m
[31m-using System.Windows.Media.Imaging;[m
[31m-using System.Windows.Shapes;[m
[31m-[m
[31m-namespace gameCenter.Projects.TicTacToe[m
[31m-{[m
[31m-    /// <summary>[m
[31m-    /// Interaction logic for TicTacToeView.xaml[m
[31m-    /// </summary>[m
[31m-    public partial class TicTacToeView : Window[m
[31m-    {[m
[31m-[m
[31m-        TicTacToeGame game = new();[m
[31m-[m
[31m-        public TicTacToeView()[m
[31m-        {[m
[31m-            InitializeComponent();[m
[31m-        }[m
[31m-[m
[31m-        private void Button_Click(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            Button button = (Button)sender;[m
[31m-            if (button != null && string.IsNullOrEmpty(button.Content as string))[m
[31m-            {[m
[31m-                button.Content = game._currentPlayer.ToString();[m
[31m-                int row = Grid.GetRow(button);[m
[31m-                int column = Grid.GetColumn(button);[m
[31m-                game._gameBoard[row, column] = game._currentPlayer;[m
[31m-[m
[31m-                if (game.CheckForWin())[m
[31m-                {[m
[31m-                    MessageBox.Show($"{game._currentPlayer} wins!", "Game Over", MessageBoxButton.OK, MessageBoxImage.Information);[m
[31m-                    ResetGame();[m
[31m-                }[m
[31m-                else[m
[31m-                {[m
[31m-                    if (game.IsBoardFull())[m
[31m-                    {[m
[31m-                        MessageBox.Show("It's a draw!", "Game Over", MessageBoxButton.OK, MessageBoxImage.Information);[m
[31m-                        ResetGame();[m
[31m-                    }[m
[31m-                    else[m
[31m-                    {[m
[31m-                        game._currentPlayer = game._currentPlayer == 'X' ? 'O' : 'X';[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-       [m
[31m-[m
[31m-        private void ResetGame()[m
[31m-        {[m
[31m-            game = new TicTacToeGame();[m
[31m-[m
[31m-            foreach (Button button in MainGrid.Children)[m
[31m-            {[m
[31m-                button.Content = "";[m
[31m-            }[m
[31m-        }[m
[31m-        [m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/gameCenter/Projects/TodoList/Models/TodoListModel.cs b/gameCenter/Projects/TodoList/Models/TodoListModel.cs[m
[1mdeleted file mode 100644[m
[1mindex 64194c3..0000000[m
[1m--- a/gameCenter/Projects/TodoList/Models/TodoListModel.cs[m
[1m+++ /dev/null[m
[36m@@ -1,103 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Collections.ObjectModel;[m
[31m-using System.IO;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows;[m
[31m-[m
[31m-namespace gameCenter.Projects.TodoList.Models[m
[31m-{[m
[31m-    internal class TodoListModel[m
[31m-    {[m
[31m-[m
[31m-        public ObservableCollection<TodoTask> Tasks { get; set; }[m
[31m-[m
[31m-        public TodoListModel()[m
[31m-        {[m
[31m-            Tasks = new ObservableCollection<TodoTask>();[m
[31m-        }[m
[31m-        public void UpdateTask(int taskId, string newDescription)[m
[31m-        {[m
[31m-            TodoTask task = Tasks.FirstOrDefault(task => task.Id == taskId);[m
[31m-            if (task != null)[m
[31m-            {[m
[31m-                task.Description = newDescription;[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                throw new Exception("The task with this Id wasn't found");[m
[31m-            }[m
[31m-        }[m
[31m-        public void DeleteTask(int taskId, string newDescription)[m
[31m-        {[m
[31m-            TodoTask task = Tasks.FirstOrDefault(task => task.Id == taskId);[m
[31m-            if (task != null)[m
[31m-            {[m
[31m-                Tasks.Remove(task);[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                throw new Exception("The task with this Id wasn't found");[m
[31m-            }[m
[31m-        }[m
[31m-        public void ToggleTaskIsComplete(int taskId)[m
[31m-        {[m
[31m-            TodoTask task = Tasks.FirstOrDefault(task => task.Id == taskId);[m
[31m-            if (task != null)[m
[31m-            {[m
[31m-                task.IsComplete = !task.IsComplete;[m
[31m-            }[m
[31m-            else[m
[31m-            {[m
[31m-                throw new Exception("The task with this Id wasn't found");[m
[31m-            }[m
[31m-        }[m
[31m-        public void AddNewTask(TodoTask task)[m
[31m-        {[m
[31m-            Tasks.Add(task);[m
[31m-        }[m
[31m-[m
[31m-        public void ReadTaskMemory()[m
[31m-        {[m
[31m-            if (!File.Exists("task.txt"))[m
[31m-            {[m
[31m-                using (File.Create("task.txt"))[m
[31m-                {[m
[31m-[m
[31m-                };[m
[31m-            }[m
[31m-            try [m
[31m-            {[m
[31m-                using (StreamReader streamReader = new StreamReader("task.txt"))[m
[31m-                {[m
[31m-                    [m
[31m-                    string line;[m
[31m-                    while ((line  = streamReader.ReadLine()) != null) [m
[31m-                    {[m
[31m-                        string[] taskAtributes = line.Split(',');[m
[31m-                        bool isComp = taskAtributes[3] == "true"? true : false;[m
[31m-                        TodoTask tempTask = new TodoTask(int.Parse(taskAtributes[0]), taskAtributes[1], DateTime.Parse(taskAtributes[2]), isComp);[m
[31m-                        Tasks.Add(tempTask);[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-            catch (Exception ex)[m
[31m-            {[m
[31m-                MessageBox.Show(ex.Message);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        public void UpdateTaskMemory()[m
[31m-        {[m
[31m-            File.Delete("task.txt");[m
[31m-            foreach (TodoTask task in Tasks)[m
[31m-            {[m
[31m-                File.AppendAllText("task.txt", $"{task.Id},{task.Description},{task.CreatedDate},{task.IsComplete}\n");[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/TodoList/Models/TodoTask.cs b/gameCenter/Projects/TodoList/Models/TodoTask.cs[m
[1mdeleted file mode 100644[m
[1mindex d528628..0000000[m
[1m--- a/gameCenter/Projects/TodoList/Models/TodoTask.cs[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.ComponentModel;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-[m
[31m-namespace gameCenter.Projects.TodoList.Models[m
[31m-{[m
[31m-    internal class TodoTask[m
[31m-    {[m
[31m-[m
[31m-        public int Id { get; set; }[m
[31m-        public string Description { get; set; }[m
[31m-        public DateTime CreatedDate { get; set; }[m
[31m-[m
[31m-        public bool IsComplete;[m
[31m-[m
[31m-[m
[31m-        public TodoTask(int id, string description, DateTime date , bool complete = false )[m
[31m-        {[m
[31m-            Id = id;[m
[31m-            Description = description;[m
[31m-            CreatedDate = date;[m
[31m-            IsComplete = complete;[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/TodoList/TodoList.xaml b/gameCenter/Projects/TodoList/TodoList.xaml[m
[1mdeleted file mode 100644[m
[1mindex 2ca413d..0000000[m
[1m--- a/gameCenter/Projects/TodoList/TodoList.xaml[m
[1m+++ /dev/null[m
[36m@@ -1,32 +0,0 @@[m
[31m-﻿<Window x:Class="gameCenter.Projects.TodoList.TodoList"[m
[31m-        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m
[31m-        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"[m
[31m-        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"[m
[31m-        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"[m
[31m-        xmlns:local="clr-namespace:gameCenter.Projects.TodoList"[m
[31m-        mc:Ignorable="d"[m
[31m-        Title="TodoList" Height="450" Width="800">[m
[31m-    <Grid>[m
[31m-        <Grid.Background>[m
[31m-            <ImageBrush ImageSource="/Images/backGround.jpg" Opacity="0.4"/>[m
[31m-        </Grid.Background>[m
[31m-        <ListBox Name="listTasks" Margin="10,10,10,50" >[m
[31m-            <ListBox.ItemTemplate>[m
[31m-                <DataTemplate>[m
[31m-                    <StackPanel Orientation="Horizontal">[m
[31m-                        <CheckBox x:Name="chkTask" IsChecked="{Binding IsComplete}" Click="OnTaskToggled" Width="20"/>[m
[31m-                        <TextBlock Name="txtTaskDescription" Text="{Binding Description}" MouseLeftButtonDown="OnTextBlockMouseLeftButtonDown" Width="300"/>[m
[31m-                        <TextBox Name="editTaskDescription" Width="300" Visibility="Collapsed"/>[m
[31m-                        <Button Content="Save" Name="btnSave" Visibility="Collapsed" Click="OnSaveEdit"/>[m
[31m-                        <Button x:Name="btnDelete" Content="Delete" Visibility="Collapsed" Click="OnDelete"/>[m
[31m-                    </StackPanel>[m
[31m-                </DataTemplate>[m
[31m-            </ListBox.ItemTemplate>[m
[31m-        </ListBox>[m
[31m-[m
[31m-        <TextBox Name="txtNewTask" Margin="10,0,405,10" Height="30" VerticalAlignment="Bottom" />[m
[31m-        <Button Content="Add Task" Margin="400,0,289,10" Height="30" VerticalAlignment="Bottom" Click="OnAddTask"/>[m
[31m-        <Button Content="Save List" Margin="679,0,10,10" Height="30" VerticalAlignment="Bottom" Click="SaveList"/>[m
[31m-[m
[31m-    </Grid>[m
[31m-</Window>[m
\ No newline at end of file[m
[1mdiff --git a/gameCenter/Projects/TodoList/TodoList.xaml.cs b/gameCenter/Projects/TodoList/TodoList.xaml.cs[m
[1mdeleted file mode 100644[m
[1mindex fcc53ca..0000000[m
[1m--- a/gameCenter/Projects/TodoList/TodoList.xaml.cs[m
[1m+++ /dev/null[m
[36m@@ -1,139 +0,0 @@[m
[31m-﻿[m
[31m-using gameCenter.Projects.TodoList.Models;[m
[31m-using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Globalization;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows;[m
[31m-using System.Windows.Controls;[m
[31m-using System.Windows.Data;[m
[31m-using System.Windows.Documents;[m
[31m-using System.Windows.Input;[m
[31m-using System.Windows.Media;[m
[31m-using System.Windows.Media.Imaging;[m
[31m-using System.Windows.Shapes;[m
[31m-[m
[31m-namespace gameCenter.Projects.TodoList[m
[31m-{[m
[31m-    /// <summary>[m
[31m-    /// Interaction logic for TodoList.xaml[m
[31m-    /// </summary>[m
[31m-    public partial class TodoList : Window[m
[31m-    {[m
[31m-        private TodoListModel _todoList = new TodoListModel();[m
[31m-[m
[31m-        public TodoList()[m
[31m-        {[m
[31m-            InitializeComponent();[m
[31m-            InitializeTasks();[m
[31m-        }[m
[31m-[m
[31m-        private void InitializeTasks()[m
[31m-        {[m
[31m-            _todoList.ReadTaskMemory();[m
[31m-            listTasks.ItemsSource = _todoList.Tasks;[m
[31m-[m
[31m-            foreach (var item in listTasks.Items)[m
[31m-            {[m
[31m-                if (item is TodoTask todoTask && todoTask.IsComplete)[m
[31m-                {[m
[31m-                    ListBoxItem container = (ListBoxItem)listTasks.ItemContainerGenerator.ContainerFromItem(item);[m
[31m-[m
[31m-                    if (container != null)[m
[31m-                    {[m
[31m-                        CheckBox checkBox = container.FindName("chkTask") as CheckBox;[m
[31m-[m
[31m-                        if (checkBox != null)[m
[31m-                        {[m
[31m-                            checkBox.IsChecked = true;[m
[31m-                        }[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        private void OnTaskToggled(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            if (sender is CheckBox checkBox && checkBox.DataContext is TodoTask task)[m
[31m-            {[m
[31m-                _todoList.ToggleTaskIsComplete(task.Id);[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-        private void OnTextBlockMouseLeftButtonDown(object sender, MouseButtonEventArgs e)[m
[31m-        {[m
[31m-            if (e.ClickCount == 2)[m
[31m-            {[m
[31m-                TextBlock textBlock = sender as TextBlock;[m
[31m-                StackPanel parent = textBlock.Parent as StackPanel;[m
[31m-                TextBox editTextBox = parent.FindName("editTaskDescription") as TextBox;[m
[31m-                Button btnSave = parent.FindName("btnSave") as Button;[m
[31m-                Button btnDelete = parent.FindName("btnDelete") as Button;[m
[31m-[m
[31m-                textBlock.Visibility = Visibility.Collapsed;[m
[31m-                editTextBox.Visibility = Visibility.Visible;[m
[31m-                btnSave.Visibility = Visibility.Visible;[m
[31m-                btnDelete.Visibility = Visibility.Visible;[m
[31m-[m
[31m-                editTextBox.Text = textBlock.Text;[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        private void OnSaveEdit(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-[m
[31m-            Button btnSave = sender as Button;[m
[31m-            StackPanel parent = btnSave.Parent as StackPanel;[m
[31m-            Button btnDelete = parent.FindName("btnDelete") as Button;[m
[31m-            TextBox editTextBox = parent.FindName("editTaskDescription") as TextBox;[m
[31m-            TextBlock textBlock = parent.FindName("txtTaskDescription") as TextBlock;[m
[31m-            TodoTask task = textBlock.DataContext as TodoTask;[m
[31m-[m
[31m-            editTextBox.Visibility = Visibility.Collapsed;[m
[31m-            btnSave.Visibility = Visibility.Collapsed;[m
[31m-            btnDelete.Visibility = Visibility.Collapsed;[m
[31m-[m
[31m-            textBlock.Visibility = Visibility.Visible;[m
[31m-[m
[31m-            textBlock.Text = editTextBox.Text;[m
[31m-            _todoList.UpdateTask(task.Id, editTextBox.Text);[m
[31m-        }[m
[31m-[m
[31m-        private void OnDelete (object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            Button btnDelete = sender as Button;[m
[31m-            StackPanel parent = btnDelete.Parent as StackPanel;[m
[31m-            Button btnSave = parent.FindName("btnSave") as Button;[m
[31m-            TextBox editTextBox = parent.FindName("editTaskDescription") as TextBox;[m
[31m-            TextBlock textBlock = parent.FindName("txtTaskDescription") as TextBlock;[m
[31m-            TodoTask task = textBlock.DataContext as TodoTask;[m
[31m-[m
[31m-            editTextBox.Visibility = Visibility.Collapsed;[m
[31m-            btnSave.Visibility = Visibility.Collapsed;[m
[31m-            btnDelete.Visibility = Visibility.Collapsed;[m
[31m-[m
[31m-            textBlock.Visibility = Visibility.Visible;[m
[31m-[m
[31m-            textBlock.Text = editTextBox.Text;[m
[31m-            _todoList.DeleteTask(task.Id, editTextBox.Text);[m
[31m-        }[m
[31m-[m
[31m-        private void OnAddTask(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            if (!string.IsNullOrWhiteSpace(txtNewTask.Text))[m
[31m-            {[m
[31m-                TodoTask newTask = new TodoTask(_todoList.Tasks.Count + 1, txtNewTask.Text, DateTime.Now, false);[m
[31m-                _todoList.AddNewTask(newTask);[m
[31m-                txtNewTask.Clear();[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        private void SaveList(object sender, RoutedEventArgs e) => _todoList.UpdateTaskMemory();[m
[31m-    }[m
[31m-}[m
[31m-[m
[31m-[m
[1mdiff --git a/gameCenter/Projects/UserManager/Models/Enums.cs b/gameCenter/Projects/UserManager/Models/Enums.cs[m
[1mdeleted file mode 100644[m
[1mindex a65ee1e..0000000[m
[1m--- a/gameCenter/Projects/UserManager/Models/Enums.cs[m
[1m+++ /dev/null[m
[36m@@ -1,9 +0,0 @@[m
[31m-﻿namespace gameCenter.Projects.Project1.Models[m
[31m-{[m
[31m-    public enum UserStatusTypes[m
[31m-    {[m
[31m-        Freeze,[m
[31m-        Logged_Off,[m
[31m-        Logged_In[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/UserManager/Models/User.cs b/gameCenter/Projects/UserManager/Models/User.cs[m
[1mdeleted file mode 100644[m
[1mindex 7504705..0000000[m
[1m--- a/gameCenter/Projects/UserManager/Models/User.cs[m
[1m+++ /dev/null[m
[36m@@ -1,24 +0,0 @@[m
[31m-﻿using gameCenter.Projects.Project1.Models;[m
[31m-using System;[m
[31m-[m
[31m-namespace WpfApp1.Models[m
[31m-{[m
[31m-    internal class User[m
[31m-    {[m
[31m-        public int Id { get; set; }[m
[31m-        public string Name { get; set; }[m
[31m-        public string Email { get; set; }[m
[31m-        public string Status { get; set; }[m
[31m-        public DateTime Created { get; set; }[m
[31m-        public DateTime? LastLogIn { get; set; }[m
[31m-[m
[31m-        public User(int id, string name, string email)[m
[31m-        {[m
[31m-            Id = id;[m
[31m-            Name = name;[m
[31m-            Email = email;[m
[31m-            Status = UserStatusTypes.Logged_Off.ToString();[m
[31m-            Created = DateTime.Now;[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/UserManager/Models/UsersListHandler.cs b/gameCenter/Projects/UserManager/Models/UsersListHandler.cs[m
[1mdeleted file mode 100644[m
[1mindex 6496782..0000000[m
[1m--- a/gameCenter/Projects/UserManager/Models/UsersListHandler.cs[m
[1m+++ /dev/null[m
[36m@@ -1,103 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using WpfApp1.Models;[m
[31m-[m
[31m-namespace gameCenter.Projects.Project1.Models[m
[31m-{[m
[31m-    class UsersListHandler[m
[31m-    {[m
[31m-        public List<User> UsersList { get; private set; }[m
[31m-[m
[31m-        public UsersListHandler()[m
[31m-        {[m
[31m-            UsersList = GenerateUsersList();[m
[31m-        }[m
[31m-[m
[31m-        public void AddUser(User user)[m
[31m-        {[m
[31m-            UsersList.Add(user);[m
[31m-        }[m
[31m-[m
[31m-        public void RemoveUser(int id)[m
[31m-        {[m
[31m-            UsersList.Remove(UsersList[id]);[m
[31m-            SetIds();[m
[31m-        }[m
[31m-[m
[31m-        public void UpdateUser(User user)[m
[31m-        {[m
[31m-            UsersList[user.Id - 1] = user;[m
[31m-        }[m
[31m-[m
[31m-        public bool ToggleLogUser(int id)[m
[31m-        {[m
[31m-            User user = UsersList[id - 1];[m
[31m-            if (user.Status != UserStatusTypes.Freeze.ToString())[m
[31m-            {[m
[31m-                if (user.Status == UserStatusTypes.Logged_Off.ToString())[m
[31m-                {[m
[31m-                    user.Status = UserStatusTypes.Logged_In.ToString();[m
[31m-                    user.LastLogIn = DateTime.Now;[m
[31m-                }[m
[31m-                else[m
[31m-                {[m
[31m-                    user.Status = UserStatusTypes.Logged_Off.ToString();[m
[31m-                }[m
[31m-                return true;[m
[31m-            }[m
[31m-            return false;[m
[31m-        }[m
[31m-[m
[31m-        public void ToogleFreezeUser(int id)[m
[31m-        {[m
[31m-            User user = UsersList[id - 1];[m
[31m-            if (user.Status == UserStatusTypes.Freeze.ToString())[m
[31m-            {[m
[31m-                user.Status = UserStatusTypes.Logged_Off.ToString();[m
[31m-                return;[m
[31m-            }[m
[31m-            user.Status = UserStatusTypes.Freeze.ToString();[m
[31m-        }[m
[31m-[m
[31m-        public bool CheckIfEmailExists(string email)[m
[31m-        {[m
[31m-            return UsersList.Any(user => user.Email == email);[m
[31m-        }[m
[31m-[m
[31m-        private void SetIds()[m
[31m-        {[m
[31m-            for (int i = 0; i < UsersList.Count; i++)[m
[31m-            {[m
[31m-                UsersList[i].Id = i + 1;[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        private List<User> GenerateUsersList()[m
[31m-        {[m
[31m-            return new List<User>()[m
[31m-            {[m
[31m-                new User([m
[31m-                    id: 1,[m
[31m-                    name: "Joe",[m
[31m-                    email: "joe@email.com"[m
[31m-                ),[m
[31m-                new User([m
[31m-                    id : 2,[m
[31m-                    name : "Bob",[m
[31m-                    email: "bob@email.com"[m
[31m-                ),[m
[31m-                new User([m
[31m-                    id : 3,[m
[31m-                    name : "Gil",[m
[31m-                    email: "gil@email.com"[m
[31m-                ),[m
[31m-                new User([m
[31m-                    id : 4,[m
[31m-                    name: "Shosh",[m
[31m-                    email: "shosh@email.com"[m
[31m-                )[m
[31m-            };[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/UserManager/UserManagerView.xaml b/gameCenter/Projects/UserManager/UserManagerView.xaml[m
[1mdeleted file mode 100644[m
[1mindex 187aac4..0000000[m
[1m--- a/gameCenter/Projects/UserManager/UserManagerView.xaml[m
[1m+++ /dev/null[m
[36m@@ -1,156 +0,0 @@[m
[31m-﻿<Window x:Class="gameCenter.Projects.UserManager.UserManagerView"[m
[31m-        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m
[31m-        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"[m
[31m-        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"[m
[31m-        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"[m
[31m-        xmlns:local="clr-namespace:gameCenter.Projects.UserManager"[m
[31m-        mc:Ignorable="d"[m
[31m-        Title="MainWindow" Height="800" Width="1400">[m
[31m-    <Grid>[m
[31m-        <Grid.RowDefinitions>[m
[31m-            <RowDefinition Height="5*"/>[m
[31m-            <RowDefinition Height="0.5*"/>[m
[31m-        </Grid.RowDefinitions>[m
[31m-        <Grid.Background>[m
[31m-            <ImageBrush ImageSource="/Images/backGround.jpg" Opacity="0.2"/>[m
[31m-        </Grid.Background>[m
[31m-        <StackPanel x:Name="mainContainer" Grid.Row="0">[m
[31m-            <Label x:Name="MainTitle"[m
[31m-                Content="Users Manager" [m
[31m-                HorizontalContentAlignment="Center" [m
[31m-                Background="AliceBlue"[m
[31m-                FontWeight="Bold"[m
[31m-                FontSize="23"[m
[31m-            />[m
[31m-            <StackPanel x:Name="addUserPanel" Width="300" >[m
[31m-                <StackPanel x:Name="userNamePanel">[m
[31m-                    <Label Content="user Name" />[m
[31m-                    <TextBox [m
[31m-                        x:Name="UserName" [m
[31m-                        BorderThickness="1,1,1,2"[m
[31m-                        Height="25" LostFocus="On_UserName_LostFocus"[m
[31m-                    >[m
[31m-                        <TextBox.Resources>[m
[31m-                            <Style TargetType="Border">[m
[31m-                                <Setter Property="CornerRadius" Value="5"/>[m
[31m-                            </Style>[m
[31m-                        </TextBox.Resources>[m
[31m-                    </TextBox>[m
[31m-                </StackPanel>[m
[31m-                <StackPanel x:Name="userEmailPanel" Margin="0,10,0,0">[m
[31m-                    <Label Content="user Email" />[m
[31m-                    <TextBox [m
[31m-                        x:Name="UserEmail" [m
[31m-                        BorderThickness="1,1,1,2" [m
[31m-                        Height="25"[m
[31m-                        LostFocus="On_UserEmail_LostFocus">[m
[31m-                        <TextBox.Resources>[m
[31m-                            <Style TargetType="Border">[m
[31m-                                <Setter Property="CornerRadius" Value="5"/>[m
[31m-                            </Style>[m
[31m-                        </TextBox.Resources>[m
[31m-                    </TextBox>[m
[31m-                </StackPanel>[m
[31m-                <WrapPanel HorizontalAlignment="Center">[m
[31m-                    <Button [m
[31m-                        x:Name="AddButton"[m
[31m-                        Content="Add"[m
[31m-                        Width="80"[m
[31m-                        Height="30"[m
[31m-                        BorderThickness="0"[m
[31m-                        Background= "#FF88D289"[m
[31m-                        Margin="10,30,20,30" Click="On_Add_Button_Click">[m
[31m-                        <Button.Resources>[m
[31m-                            <Style TargetType="Border">[m
[31m-                                <Setter Property="CornerRadius" Value="5"/>[m
[31m-                            </Style>[m
[31m-                        </Button.Resources>[m
[31m-                    </Button>[m
[31m-                    <Button [m
[31m-                        x:Name="RemoveButton"[m
[31m-                        Content="Remove"[m
[31m-                        BorderThickness="0"[m
[31m-                        Width="80"[m
[31m-                        Margin="0,30,0,30" Click="On_Remove_Button_Click" Background="#FFD26B6B">[m
[31m-                        <Button.Resources>[m
[31m-                            <Style TargetType="Border">[m
[31m-                                <Setter Property="CornerRadius" Value="5"/>[m
[31m-                            </Style>[m
[31m-                        </Button.Resources>[m
[31m-                    </Button>[m
[31m-                    <Button [m
[31m-                        x:Name="UpdateButton"[m
[31m-                        Content="Update"[m
[31m-                        BorderThickness="0"[m
[31m-                        Width="80"[m
[31m-                        Margin="20,30,0,30" Background="#FF67A6E0" Click="On_Update_Button_Click">[m
[31m-                        <Button.Resources>[m
[31m-                            <Style TargetType="Border">[m
[31m-                                <Setter Property="CornerRadius" Value="5"/>[m
[31m-                            </Style>[m
[31m-                        </Button.Resources>[m
[31m-                    </Button>[m
[31m-                </WrapPanel>[m
[31m-                <WrapPanel HorizontalAlignment="Center">[m
[31m-                    <Button [m
[31m-                        x:Name="LogButton"[m
[31m-                        Content="Login/out"[m
[31m-                        BorderThickness="0"[m
[31m-                        Width="80"[m
[31m-                        Margin="10,0,20,30" Background="#FF88D289" Click="On_ToggleUserLog_Button_Click">[m
[31m-                        <Button.Resources>[m
[31m-                            <Style TargetType="Border">[m
[31m-                                <Setter Property="CornerRadius" Value="5"/>[m
[31m-                            </Style>[m
[31m-                        </Button.Resources>[m
[31m-                    </Button>[m
[31m-                    <Button [m
[31m-                        x:Name="FreezeButton"[m
[31m-                        Content="Freeze/Un-Freeze"[m
[31m-                        Height="30"[m
[31m-                        BorderThickness="0"[m
[31m-                        Background= "#FFD26B6B"[m
[31m-                        Margin="0,0,0,30" Click="On_ToogleFreezeUser_Button_Click">[m
[31m-                        <Button.Resources>[m
[31m-                            <Style TargetType="Border">[m
[31m-                                <Setter Property="CornerRadius" Value="5"/>[m
[31m-                            </Style>[m
[31m-                        </Button.Resources>[m
[31m-                    </Button>[m
[31m-                </WrapPanel>[m
[31m-            </StackPanel>[m
[31m-            <StackPanel x:Name="usersListContainer">[m
[31m-                <Label x:Name="usersListTitle"[m
[31m-                    Content="Users List" [m
[31m-                    HorizontalContentAlignment="Center" [m
[31m-                    Background="AliceBlue"[m
[31m-                    FontWeight="Bold"[m
[31m-                    FontSize="23"[m
[31m-                />[m
[31m-                <DataGrid [m
[31m-                    x:Name="UsersDataGrid"[m
[31m-                    HorizontalAlignment="Center"[m
[31m-                    Margin="0,30,0,0"[m
[31m-                    ColumnWidth="100"[m
[31m-                    CanUserAddRows="False"[m
[31m-                    HeadersVisibility="Column"[m
[31m-                    ScrollViewer.CanContentScroll="True"[m
[31m-                    ScrollViewer.VerticalScrollBarVisibility="Auto"[m
[31m-                    MaxHeight="200" [m
[31m-                    SelectionChanged="On_UsersDataGrid_SelectionChanged"[m
[31m-                    IsReadOnly="True"[m
[31m-                >[m
[31m-                    <DataGrid.ColumnHeaderStyle>[m
[31m-                        <Style TargetType="DataGridColumnHeader">[m
[31m-                            <Setter Property="Background" Value="#FF3B74A5"/>[m
[31m-                            <Setter Property="Foreground" Value="#FFE3E7EC"/>[m
[31m-                            <Setter Property="HorizontalContentAlignment" Value="Center"/>[m
[31m-                            <Setter Property="Height" Value="25"/>[m
[31m-                        </Style>[m
[31m-                    </DataGrid.ColumnHeaderStyle>[m
[31m-                </DataGrid>[m
[31m-            </StackPanel>[m
[31m-        </StackPanel>[m
[31m-[m
[31m-    </Grid>[m
[31m-</Window>[m
[1mdiff --git a/gameCenter/Projects/UserManager/UserManagerView.xaml.cs b/gameCenter/Projects/UserManager/UserManagerView.xaml.cs[m
[1mdeleted file mode 100644[m
[1mindex e2b902b..0000000[m
[1m--- a/gameCenter/Projects/UserManager/UserManagerView.xaml.cs[m
[1m+++ /dev/null[m
[36m@@ -1,156 +0,0 @@[m
[31m-﻿using gameCenter.Projects.Project1.Models;[m
[31m-using gameCenter.Projects.Project1.Utilities;[m
[31m-using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Windows;[m
[31m-using System.Windows.Controls;[m
[31m-using WpfApp1.Models;[m
[31m-[m
[31m-namespace gameCenter.Projects.UserManager[m
[31m-{[m
[31m-    public partial class UserManagerView : Window[m
[31m-    {[m
[31m-        private readonly UsersListHandler _listHandler;[m
[31m-        private readonly List<User> _users;[m
[31m-[m
[31m-        private int _selectedUserId;[m
[31m-        public UserManagerView()[m
[31m-        {[m
[31m-            _listHandler = new();[m
[31m-            _users = _listHandler.UsersList;[m
[31m-            _selectedUserId = 0;[m
[31m-[m
[31m-            InitializeComponent();[m
[31m-[m
[31m-            UsersDataGrid.ItemsSource = _users;[m
[31m-        }[m
[31m-[m
[31m-        private void On_Add_Button_Click(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            if (_listHandler.CheckIfEmailExists(UserEmail.Text))[m
[31m-            {[m
[31m-                MessageBox.Show("Email Already Taken!");[m
[31m-                return;[m
[31m-            }[m
[31m-            if (CheckFields() && Validate.UserName(UserName) && Validate.Email(UserEmail)) [m
[31m-            { [m
[31m-                _listHandler.AddUser([m
[31m-                    new User(_users.Count + 1, UserName.Text, UserEmail.Text)[m
[31m-                );[m
[31m-[m
[31m-                UpdateGrid();[m
[31m-                ClearFields();[m
[31m-            }[m
[31m-        }[m
[31m-        private void On_Remove_Button_Click(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            if (_selectedUserId == 0)[m
[31m-            {[m
[31m-                MessageBox.Show("Please Pick a User!");[m
[31m-                return;[m
[31m-            }[m
[31m-            _listHandler.RemoveUser(_selectedUserId - 1);[m
[31m-            UpdateGrid();[m
[31m-        }[m
[31m-        private void On_Update_Button_Click(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            if (_selectedUserId == 0)[m
[31m-            {[m
[31m-                MessageBox.Show("Please Pick a User!");[m
[31m-                return;[m
[31m-            }[m
[31m-            _listHandler.UpdateUser([m
[31m-                new User(_selectedUserId, UserName.Text, UserEmail.Text)[m
[31m-            );[m
[31m-[m
[31m-            UpdateGrid();[m
[31m-            ClearFields();[m
[31m-        }[m
[31m-[m
[31m-        private void On_ToggleUserLog_Button_Click(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            if (_selectedUserId == 0)[m
[31m-            {[m
[31m-                MessageBox.Show("Please Pick a User!");[m
[31m-                return;[m
[31m-            }[m
[31m-            if (_listHandler.ToggleLogUser(_selectedUserId))[m
[31m-            {[m
[31m-                UpdateGrid();[m
[31m-                return;[m
[31m-            }[m
[31m-            MessageBox.Show("User Status Is Freeze, cant log in!");[m
[31m-        }[m
[31m-        private void On_ToogleFreezeUser_Button_Click(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            if (_selectedUserId == 0)[m
[31m-            {[m
[31m-                MessageBox.Show("Please Pick a User!");[m
[31m-                return;[m
[31m-            }[m
[31m-            _listHandler.ToogleFreezeUser(_selectedUserId);[m
[31m-            UpdateGrid();[m
[31m-        }[m
[31m-[m
[31m-        private void On_UserEmail_LostFocus(object sender, EventArgs e)[m
[31m-        {[m
[31m-            Validate.Email(UserEmail);[m
[31m-        }[m
[31m-[m
[31m-        private void On_UserName_LostFocus(object sender, RoutedEventArgs e)[m
[31m-        {[m
[31m-            Validate.UserName(UserName);[m
[31m-[m
[31m-        }[m
[31m-[m
[31m-        private void On_UsersDataGrid_SelectionChanged(object sender, SelectionChangedEventArgs e)[m
[31m-        {[m
[31m-            var idCell = UsersDataGrid.SelectedCells[0];[m
[31m-            var nameCell = UsersDataGrid.SelectedCells[1];[m
[31m-            var emailCell = UsersDataGrid.SelectedCells[2];[m
[31m-[m
[31m-            try[m
[31m-            {[m
[31m-                _selectedUserId = Convert.ToInt16(((TextBlock)[m
[31m-                    idCell.Column.GetCellContent(idCell.Item)).Text[m
[31m-                );[m
[31m-[m
[31m-                UserName.Text = ((TextBlock)[m
[31m-                    nameCell.Column.GetCellContent(nameCell.Item)).Text;[m
[31m-                UserEmail.Text = ((TextBlock)[m
[31m-                    emailCell.Column.GetCellContent(emailCell.Item)).Text;[m
[31m-            }[m
[31m-            catch[m
[31m-            {[m
[31m-                _selectedUserId = 0;[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        private void ClearFields()[m
[31m-        {[m
[31m-            UserEmail.Text = string.Empty;[m
[31m-            UserName.Text = string.Empty;[m
[31m-            _selectedUserId = 0;[m
[31m-        }[m
[31m-[m
[31m-        private bool CheckFields()[m
[31m-        {[m
[31m-            if (UserName.Text == String.Empty || [m
[31m-                UserName.Text == null ||[m
[31m-                UserEmail.Text == String.Empty || [m
[31m-                UserEmail.Text == null)[m
[31m-            {[m
[31m-                MessageBox.Show("Please Fill All Details!");[m
[31m-                return false;[m
[31m-            }[m
[31m-            return true;[m
[31m-        }[m
[31m-[m
[31m-        private void UpdateGrid()[m
[31m-        {[m
[31m-            UsersDataGrid.ItemsSource = _users.ToList();[m
[31m-        }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/UserManager/Utilities/Validate.cs b/gameCenter/Projects/UserManager/Utilities/Validate.cs[m
[1mdeleted file mode 100644[m
[1mindex 5a45c64..0000000[m
[1m--- a/gameCenter/Projects/UserManager/Utilities/Validate.cs[m
[1m+++ /dev/null[m
[36m@@ -1,42 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Text.RegularExpressions;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows.Controls;[m
[31m-using System.Windows.Media;[m
[31m-using System.Windows;[m
[31m-[m
[31m-namespace gameCenter.Projects.Project1.Utilities[m
[31m-{[m
[31m-    internal class Validate[m
[31m-    {[m
[31m-        public static bool Email(TextBox textBox)[m
[31m-        {[m
[31m-            Regex regex = new(@"^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$");[m
[31m-            Match match = regex.Match(textBox.Text);[m
[31m-            if (!match.Success)[m
[31m-            {[m
[31m-                MessageBox.Show("Please enter valid email!!!");[m
[31m-                textBox.BorderBrush = new SolidColorBrush(Colors.IndianRed);[m
[31m-                return false;[m
[31m-            }[m
[31m-            textBox.BorderBrush = new SolidColorBrush(Colors.Gray);[m
[31m-            return true;[m
[31m-        }[m
[31m-        public static bool UserName(TextBox textBox)[m
[31m-        {[m
[31m-            Regex regex = new(@"^[A-Za-z].{2,15}$");[m
[31m-            Match match = regex.Match(textBox.Text);[m
[31m-            if (!match.Success)[m
[31m-            {[m
[31m-                MessageBox.Show("Please enter valid UserName!!!");[m
[31m-                textBox.BorderBrush = new SolidColorBrush(Colors.IndianRed);[m
[31m-                return false;[m
[31m-            }[m
[31m-            textBox.BorderBrush = new SolidColorBrush(Colors.Gray);[m
[31m-            return true;[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/Projects/projectPresentationPage.xaml b/gameCenter/Projects/projectPresentationPage.xaml[m
[1mdeleted file mode 100644[m
[1mindex abd2102..0000000[m
[1m--- a/gameCenter/Projects/projectPresentationPage.xaml[m
[1m+++ /dev/null[m
[36m@@ -1,63 +0,0 @@[m
[31m-﻿<Window x:Class="gameCenter.Projects.projectPresentationPage"[m
[31m-        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m
[31m-        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"[m
[31m-        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"[m
[31m-        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"[m
[31m-        xmlns:local="clr-namespace:gameCenter.Projects"[m
[31m-        mc:Ignorable="d"[m
[31m-        Title="projectPresentationPage" Height="500" Width="900"[m
[31m-        ResizeMode="NoResize">[m
[31m-    <Grid>[m
[31m-        <Grid.RowDefinitions>            <RowDefinition Height="0.4*" />            <RowDefinition Height="1.5*" />            <RowDefinition Height="0.3*" />        </Grid.RowDefinitions>[m
[31m-        <Grid.Background>[m
[31m-            <ImageBrush ImageSource="/Images/backGround.jpg" Opacity="0.1"/>[m
[31m-        </Grid.Background>[m
[31m-[m
[31m-        <Border Background="AliceBlue" VerticalAlignment="Center" BorderBrush="LightGray" BorderThickness="2">[m
[31m-            <WrapPanel HorizontalAlignment="Center">[m
[31m-                <StackPanel>[m
[31m-                    <Label[m
[31m-                x:Name="TitleLabel"[m
[31m-                Content="Project Center by Itay Lerner" [m
[31m-                FontFamily="{StaticResource DefaultFont}"[m
[31m-                FontSize="20"[m
[31m-                HorizontalAlignment="Center"[m
[31m-                VerticalAlignment="Center"[m
[31m-                Background="AliceBlue"[m
[31m-            />[m
[31m-                    <Label [m
[31m-                Content="Press the mini-project's icon to continue"[m
[31m-                FontWeight="DemiBold"[m
[31m-                HorizontalAlignment="Center"[m
[31m-                VerticalAlignment="Center"[m
[31m-            />[m
[31m-                </StackPanel>[m
[31m-            </WrapPanel>[m
[31m-        </Border>[m
[31m-[m
[31m-[m
[31m-        <TextBlock             x:Name="ProjectText"            Grid.Row="1"            VerticalAlignment="Top"            HorizontalAlignment="Left"            Margin="180,67,0,0"            FontSize="16"            FontFamily="{StaticResource DefaultFont}"            FontWeight="DemiBold"        />[m
[31m-        <Image x:Name="ProjectImage"[m
[31m-               Grid.Row="1"[m
[31m-               Height="75"[m
[31m-               HorizontalAlignment="Left"[m
[31m-               VerticalAlignment="Top"[m
[31m-               Margin="81,67,0,0"[m
[31m-               MouseLeftButtonDown="ProjectImage_MouseLeftButtonUp"[m
[31m-               MouseEnter="Image_MouseEnter"[m
[31m-               MouseLeave="Image_MouseLeave"/>[m
[31m-        <Label Content="Technologies used:" Grid.Row="2" Margin="125,17,600,16" FontSize="15" Panel.ZIndex="999" FontWeight="SemiBold"/>[m
[31m-        <Border Background="AliceBlue" Grid.Row="2" BorderBrush="LightGray" BorderThickness="2">[m
[31m-            <WrapPanel Width='315' Margin="314,0,266,0">[m
[31m-                <Image Source="/Images/FileIOicon.png" x:Name="fileIOicon"/>[m
[31m-                <WrapPanel>[m
[31m-                    <Image Source="/Images/WPFicon.png" />[m
[31m-                    <Image Source="/Images/cSHARPicon.png"/>[m
[31m-                    <Image Source="/Images/XAMLicon.png"/>[m
[31m-                </WrapPanel>[m
[31m-                <Image Source="/Images/APIicon.png" x:Name="apiICon"/>[m
[31m-            </WrapPanel>[m
[31m-        </Border>[m
[31m-[m
[31m-    </Grid>[m
[31m-</Window>[m
[1mdiff --git a/gameCenter/Projects/projectPresentationPage.xaml.cs b/gameCenter/Projects/projectPresentationPage.xaml.cs[m
[1mdeleted file mode 100644[m
[1mindex 41ef098..0000000[m
[1m--- a/gameCenter/Projects/projectPresentationPage.xaml.cs[m
[1m+++ /dev/null[m
[36m@@ -1,58 +0,0 @@[m
[31m-﻿using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Text;[m
[31m-using System.Threading.Tasks;[m
[31m-using System.Windows;[m
[31m-using System.Windows.Controls;[m
[31m-using System.Windows.Data;[m
[31m-using System.Windows.Documents;[m
[31m-using System.Windows.Input;[m
[31m-using System.Windows.Media;[m
[31m-using System.Windows.Media.Imaging;[m
[31m-using System.Windows.Shapes;[m
[31m-[m
[31m-namespace gameCenter.Projects[m
[31m-{[m
[31m-    /// <summary>[m
[31m-    /// Interaction logic for projectPresentationPage.xaml[m
[31m-    /// </summary>[m
[31m-    public partial class projectPresentationPage : Window[m
[31m-    {[m
[31m-[m
[31m-        private Window currentProject;[m
[31m-        public projectPresentationPage()[m
[31m-        {[m
[31m-            InitializeComponent();[m
[31m-        }[m
[31m-[m
[31m-        public void OnStart(string title, string projectDescription, ImageSource imageSoursce, Window project, bool usesAPI = false, bool usesFileIO = false)[m
[31m-        {[m
[31m-            TitleLabel.Content = title;[m
[31m-            ProjectText.Text = projectDescription;[m
[31m-            ProjectImage.Source = imageSoursce;[m
[31m-            currentProject = project;[m
[31m-            apiICon.Visibility = usesAPI ? Visibility.Visible : Visibility.Collapsed;[m
[31m-            fileIOicon.Visibility = usesFileIO ? Visibility.Visible : Visibility.Collapsed;[m
[31m-        }[m
[31m-[m
[31m-        private void ProjectImage_MouseLeftButtonUp(object sender, MouseButtonEventArgs e)[m
[31m-        {[m
[31m-            Close();[m
[31m-            currentProject!.ShowDialog();[m
[31m-            currentProject!.Close();[m
[31m-        }[m
[31m-[m
[31m-        private void Image_MouseEnter(object sender, MouseEventArgs e)[m
[31m-        {[m
[31m-            (sender as Image).Opacity = 0.7;[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-        private void Image_MouseLeave(object sender, MouseEventArgs e)[m
[31m-        {[m
[31m-            (sender as Image)!.Opacity = 1;[m
[31m-        }[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/gameCenter/gameCenter.csproj b/gameCenter/gameCenter.csproj[m
[1mdeleted file mode 100644[m
[1mindex 7577a4d..0000000[m
[1m--- a/gameCenter/gameCenter.csproj[m
[1m+++ /dev/null[m
[36m@@ -1,67 +0,0 @@[m
[31m-﻿<Project Sdk="Microsoft.NET.Sdk">[m
[31m-[m
[31m-  <PropertyGroup>[m
[31m-    <OutputType>WinExe</OutputType>[m
[31m-    <TargetFramework>net6.0-windows</TargetFramework>[m
[31m-    <Nullable>enable</Nullable>[m
[31m-    <UseWPF>true</UseWPF>[m
[31m-  </PropertyGroup>[m
[31m-[m
[31m-  <ItemGroup>[m
[31m-    <Compile Remove="fonts\**" />[m
[31m-    <EmbeddedResource Remove="fonts\**" />[m
[31m-    <None Remove="fonts\**" />[m
[31m-    <Page Remove="fonts\**" />[m
[31m-  </ItemGroup>[m
[31m-[m
[31m-  <ItemGroup>[m
[31m-    <None Remove="Images\2048icon.png" />[m
[31m-    <None Remove="Images\APIicon.png" />[m
[31m-    <None Remove="Images\backGround.jpg" />[m
[31m-    <None Remove="Images\cSHARPicon.png" />[m
[31m-    <None Remove="Images\CurrencyConverterIcon.png" />[m
[31m-    <None Remove="Images\FileIOicon.png" />[m
[31m-    <None Remove="Images\SimonSaysIcon.png" />[m
[31m-    <None Remove="Images\square1.jpeg" />[m
[31m-    <None Remove="Images\square2.png" />[m
[31m-    <None Remove="Images\TicTacToeIcon.png" />[m
[31m-    <None Remove="Images\ToDoListIcon.png" />[m
[31m-    <None Remove="Images\UserManagerIcon.png" />[m
[31m-    <None Remove="Images\WPFicon.png" />[m
[31m-    <None Remove="Images\XAMLicon.png" />[m
[31m-  </ItemGroup>[m
[31m-[m
[31m-  <ItemGroup>[m
[31m-    <Resource Include="Images\2048icon.png" />[m
[31m-    <Resource Include="Images\APIicon.png" />[m
[31m-    <Resource Include="Images\cSHARPicon.png" />[m
[31m-    <Resource Include="Images\CurrencyConverterIcon.png" />[m
[31m-    <Resource Include="Images\backGround.jpg" />[m
[31m-    <Resource Include="Images\FileIOicon.png" />[m
[31m-    <Resource Include="Images\SimonSaysIcon.png" />[m
[31m-    <Resource Include="Images\TicTacToeIcon.png" />[m
[31m-    <Resource Include="Images\ToDoListIcon.png" />[m
[31m-    <Resource Include="Images\UserManagerIcon.png" />[m
[31m-    <Resource Include="Images\WPFicon.png" />[m
[31m-    <Resource Include="Images\XAMLicon.png" />[m
[31m-  </ItemGroup>[m
[31m-[m
[31m-  <ItemGroup>[m
[31m-    <None Update="Projects\SimonSays\Assets\Sounds\Ding1.wav">[m
[31m-      <CopyToOutputDirectory>Always</CopyToOutputDirectory>[m
[31m-    </None>[m
[31m-    <None Update="Projects\SimonSays\Assets\Sounds\Ding2.wav">[m
[31m-      <CopyToOutputDirectory>Always</CopyToOutputDirectory>[m
[31m-    </None>[m
[31m-    <None Update="Projects\SimonSays\Assets\Sounds\Ding3.wav">[m
[31m-      <CopyToOutputDirectory>Always</CopyToOutputDirectory>[m
[31m-    </None>[m
[31m-    <None Update="Projects\SimonSays\Assets\Sounds\Ding4.wav">[m
[31m-      <CopyToOutputDirectory>Always</CopyToOutputDirectory>[m
[31m-    </None>[m
[31m-    <None Update="Projects\SimonSays\Assets\Sounds\WrongBuzz.wav">[m
[31m-      <CopyToOutputDirectory>Always</CopyToOutputDirectory>[m
[31m-    </None>[m
[31m-  </ItemGroup>[m
[31m-[m
[31m-</Project>[m
